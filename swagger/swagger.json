{
  "openapi": "3.0.0",
  "info": {
    "title": "FleetFixy Backend API",
    "description": "FleetFixy Backend API provides a comprehensive set of features and functionalities to streamline the workflow of fleet management systems.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "FleetFixy Local API URL"
    },
    {
      "url": "https://fleetfixy.com",
      "description": "FleetFixy Development API URL"
    },
    {
      "url": "https://api.fleetfixy.com",
      "description": "FleetFixy Production API URL"
    }
  ],
  "paths": {
    "/api/v1/access-token/get": {
      "post": {
        "tags": [
          "Access Token"
        ],
        "summary": "Get Access Token",
        "description": "Endpoint for retrieving an access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAccessTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Access Token retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activity-log/list": {
      "post": {
        "tags": [
          "Activity Log"
        ],
        "summary": "Get Activity Log List",
        "description": "Endpoint for Get Activity Log List",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityLogListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success:Get Activity Log List successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityLogListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin-auth/login": {
      "post": {
        "tags": [
          "Admin Auth"
        ],
        "summary": "User Login",
        "description": "Endpoint for user login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin-auth/forgot-password": {
      "post": {
        "tags": [
          "Admin Auth"
        ],
        "summary": "Forgot Password",
        "description": "Endpoint for user forgot password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Forgot password request processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin-auth/reset-password": {
      "post": {
        "tags": [
          "Admin Auth"
        ],
        "summary": "Reset Password",
        "description": "Endpoint for user reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Reset password request processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin-auth/email-verification": {
      "post": {
        "tags": [
          "Admin Auth"
        ],
        "summary": "Email Verification",
        "description": "Endpoint for user Email Verification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Email Verification request processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin-auth/add-admin": {
      "post": {
        "tags": [
          "Admin Auth"
        ],
        "summary": "Add Admin",
        "description": "Endpoint for adding an admin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAdminRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Admin added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAdminResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin-auth/get-profile": {
      "post": {
        "tags": [
          "Admin Auth"
        ],
        "summary": "Get Profile",
        "description": "Endpoint for Get Profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Get Profile successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin-auth/update-profile": {
      "patch": {
        "tags": [
          "Admin Auth"
        ],
        "summary": "Update Profile",
        "description": "Endpoint for updating user profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin-auth/change-password": {
      "patch": {
        "tags": [
          "Admin Auth"
        ],
        "summary": "Change Password",
        "description": "Endpoint for changing user password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/create": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create a new asset",
        "description": "Create a new asset object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Asset created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/list/{companyId}/{page}/{perPage}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get a list of assets",
        "description": "Retrieve a paginated list of assets based on the companyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve assets from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "path",
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "perPage",
            "in": "path",
            "description": "The number of assets to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Assets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/get/{assetId}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get asset by ID",
        "description": "Retrieve an asset using its ID",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "The ID of the asset to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Asset retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/delete/{assetId}": {
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete a asset by ID",
        "description": "Delete a asset by its asset ID",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "ID of the asset to be deleted",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Driver deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/sync-fleetspin": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Sync-fleetspin",
        "description": "Sync-fleetspin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sync-fleetspin successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/active/{companyId}/{customerId}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get Active Assets",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve active Assets.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The ID of the customer to retrieve active Assets.",
            "schema": {
              "type": "string",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with active drivers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/add-comment": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Add a comment to an asset",
        "description": "Add a comment to an asset object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Comment added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/get-active-for-pm-service-package": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get active assets for PM service package",
        "description": "Retrieves a list of active assets associated with the specified PM service package.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetActiveAssetForPmServicePackage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: List of active assets for PM service package retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/get-documents/{assetId}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get Asset Documents",
        "description": "Retrieve documents for a specific Asset.",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "The ID of the asset to retrieve documents.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/get-active-for-company-documents": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get Active Assets for Documents",
        "description": "Retrieve active assets for document management.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActiveAssetDocumentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Active assets for documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Assets/delete-document/{assetId}/{documentId}": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete Asset Document",
        "description": "Delete a specific document for a Asset.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAssetDocumentRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "The ID of the driver.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document to be deleted.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Document deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetDocumenDeletetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/upload-document/{assetId}": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Asset Document upload",
        "description": "Asset Document upload.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetDocumentUploadRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "The ID of the asset to upload documents.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Document uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadAssetDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/asset-types/create": {
      "post": {
        "tags": [
          "Asset-Types"
        ],
        "summary": "Create a new Asset-Type",
        "description": "This endpoint saves a Asset-Types object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/asset-types/get/{assetTypeId}": {
      "get": {
        "tags": [
          "Asset-Types"
        ],
        "summary": "Retrieve a asset-Type by ID",
        "parameters": [
          {
            "name": "assetTypeId",
            "in": "path",
            "required": true,
            "description": "ID of the asset-type to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/asset-types/list": {
      "get": {
        "tags": [
          "Asset-Types"
        ],
        "summary": "Get a list of asset-types",
        "responses": {
          "200": {
            "description": "Success: Retrieve list of asset-types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/asset-types/delete/{assetTypeId}": {
      "delete": {
        "tags": [
          "Asset-Types"
        ],
        "summary": "Delete a Asset-Type by ID",
        "description": "This endpoint deletes a Asset-Type by its assetTypeId.",
        "parameters": [
          {
            "name": "assetTypeId",
            "in": "path",
            "description": "ID of the Asset-Type to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/asset-types/active": {
      "get": {
        "tags": [
          "Asset-Types"
        ],
        "summary": "Retrieve a list of active asset-types",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/asset-types/company": {
      "post": {
        "tags": [
          "Asset-Types"
        ],
        "summary": "Get Asset Types list of the company",
        "description": "This endpoint gets Asset Types list of the company.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAsset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAssetType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/update": {
      "patch": {
        "tags": [
          "Company"
        ],
        "summary": "Update company",
        "description": "Update company object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters or missing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Authentication is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: User does not have permission to update the company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/get": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Get company by Id",
        "description": "Get company object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company has been retrived  successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/get-active-module": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Retrieve active modules by companyId",
        "description": "Retrieves the active modules for a specific company.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetActiveModuleBody"
              },
              "example": {
                "companyId": "645d126cde103b18902d68d5"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Active modules retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActiveModule"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/activate-module": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Activate module by companyId",
        "description": "Activates a module for a specific company.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetActiveModuleBody"
              },
              "example": {
                "companyId": "645d126cde103b18902d68d5",
                "moduleCode": "INS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Module activated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActiveModule"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/get-dashboard-preferences/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get dashboard preferences by companyId",
        "description": "Retrieve the dashboard preferences for a specific company",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "ID of the Company to retrieve dashboard preferences",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard preferences retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDashboardPreferences"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/list/{page}/{perPage}": {
      "get": {
        "tags": [
          "Company Super Admin"
        ],
        "summary": "Get a list of companies",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "path",
            "required": true,
            "description": "The number of form cards to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form cards retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/get-last-sync-time/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get-last-sync-time by companyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "Id of the company to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Last-sync-time retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LastSyncTime"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/delete": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Delete company",
        "description": "Delete company object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters or missing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Authentication is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: User does not have permission to update the company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/current-billing": {
      "post": {
        "tags": [
          "Company Billing"
        ],
        "summary": "Generate Current Bill for a Company",
        "description": "Generate the current billing information for a specific company.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with the current bill information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateCurrentBill"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/billing-history": {
      "post": {
        "tags": [
          "Company Billing"
        ],
        "summary": "Retrieve Billing History",
        "description": "Retrieve the billing history for a specific company.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with the billing history",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateCurrentBill"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/get-count": {
      "get": {
        "tags": [
          "Company Super Admin"
        ],
        "summary": "Retrieve total count of companies",
        "responses": {
          "200": {
            "description": "Success: Retrieve total count of companies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComapnyCount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/get-details": {
      "post": {
        "tags": [
          "Company Super Admin"
        ],
        "summary": "Retrieve company details",
        "description": "Retrieve the details of a company",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Company details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/update-settings": {
      "patch": {
        "tags": [
          "Company Super Admin"
        ],
        "summary": "Update Company settings",
        "description": "Update settings for a company",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Company details updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/super-admin-login": {
      "post": {
        "tags": [
          "Company Super Admin"
        ],
        "summary": "Super Admin-login",
        "description": "Super Admin-login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Company details updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuperAdminLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/add-credits": {
      "post": {
        "tags": [
          "Company Credits"
        ],
        "summary": "Add Credits",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Credits added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/credits-history": {
      "post": {
        "tags": [
          "Company Credits"
        ],
        "summary": "Get Credits History",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Credit history retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/get-documents/{companyId}": {
      "get": {
        "tags": [
          "Company Documents"
        ],
        "summary": "Retrieve Company Documents by companyId",
        "description": "Retrieve the documents for a specific company",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "ID of the company to retrieve documents",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDocuments"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/delete-document/{companyId}/{documentId}": {
      "post": {
        "tags": [
          "Company Documents"
        ],
        "summary": "Delete Company Documents",
        "description": "Company Documents object",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "ID of the company to delete document",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document to delete document",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDriverDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Form card created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadCompanyDocumentDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/upload-document/{companyId}": {
      "post": {
        "tags": [
          "Company Documents"
        ],
        "summary": "Upload Document by Company ID",
        "description": "Upload a document for a specific company",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "ID of the company to upload the document",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadCompanyDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUploadDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/documents/{companyId}/{documentId}": {
      "get": {
        "tags": [
          "Company Documents"
        ],
        "summary": "Retrieve Document by Company ID and Document ID",
        "description": "Retrieve a specific document for a company",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "ID of the company",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Document retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDocuments"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/add-document-to-assets": {
      "post": {
        "tags": [
          "Company Documents"
        ],
        "summary": "Add Company Document To Assets",
        "description": "Create a new Company Document object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDocumentToAssetBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company Document added to assets successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/add-document-to-drivers": {
      "post": {
        "tags": [
          "Company Documents"
        ],
        "summary": "Add Company Document To drivers",
        "description": "Create a new Company Document object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDocumentToAssetBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company Document added to assets successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/notifications/get-latest-10": {
      "post": {
        "tags": [
          "Company Notifications"
        ],
        "summary": "Get Company Notifications",
        "description": "Get Company Notifications object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Form card created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyNotifications"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/notifications/mark-read": {
      "post": {
        "tags": [
          "Company Notifications"
        ],
        "summary": "Mark Notifications as Read",
        "description": "Mark notifications as read for a specific company.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notifications marked as read successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationsMarkRead"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/notifications/delete/{notificationId}": {
      "delete": {
        "tags": [
          "Company Notifications"
        ],
        "summary": "Delete Notification by ID",
        "description": "Delete a notification by its ID",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "ID of the notification to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company/notifications/delete-all": {
      "post": {
        "tags": [
          "Company Notifications"
        ],
        "summary": "Delete All Notifications by Company ID",
        "description": "Delete all notifications for a specific company",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All Notifications deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/create": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create Customer",
        "description": "Add a new customer to the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/list/{companyId}/{page}/{perPage}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get a list of Customers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The companyId to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "path",
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "perPage",
            "in": "path",
            "description": "The number of form cards to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Form cards retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/get/{customerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get customer by id",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The customerId to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Form cards retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/delete/{customerId}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete a customer by ID",
        "description": "Delete a customer by its customer ID",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of the customer to be deleted",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Customer deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/integrations/{companyId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Customer Integrations by Company ID",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "ID of the company to retrieve Customer Integrations",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Customer Integrations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/active/{companyId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Active Customers by Company ID",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "ID of the company to retrieve active customers",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Active customers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/get-dashboard": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Company Dashboard",
        "description": "Get Company Dashboard",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompanyDashboardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Get Company Dashboard successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyDashboardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/get-defect-summary": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Defect Summary.",
        "description": "Get Defect Summary.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompanyDashboardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Get Defect Summar successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyDashboardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/get-work-order-summary": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get work order summary.",
        "description": "Get work order summary.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompanyDashboardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Get work order summary successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyDashboardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/get-inspection-summary": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get inspection summary.",
        "description": "Get inspection summary.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompanyDashboardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success:Get inspection summary successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyDashboardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/get-pm-service-schedule-summary": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get PM service schedule summary.",
        "description": "Get PM service schedule summary.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompanyDashboardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Get PM service schedule summary successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyDashboardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/create": {
      "post": {
        "tags": [
          "Defect"
        ],
        "summary": "Create a new Defect",
        "description": "This endpoint creates a new Defect object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefectCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Defect created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/list/{companyId}/{page}/{perPage}": {
      "get": {
        "tags": [
          "Defect"
        ],
        "summary": "Get a list of Defect",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "path",
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "path",
            "description": "The number of Defects to display per page (e.g., 10, 25, 50, 100).",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Defects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/get/{defectId}": {
      "get": {
        "tags": [
          "Defect"
        ],
        "summary": "Retrieve a Defect by ID",
        "parameters": [
          {
            "name": "defectId",
            "in": "path",
            "required": true,
            "description": "ID of the Defect to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved Defect by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectResponsee"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/details/{defectId}": {
      "get": {
        "tags": [
          "Defect"
        ],
        "summary": "Retrieve Defect details by ID",
        "parameters": [
          {
            "name": "defectId",
            "in": "path",
            "required": true,
            "description": "ID of the Defect to retrieve details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved Defect details by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectDetailResponsee"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/completed/{companyId}": {
      "get": {
        "tags": [
          "Defect"
        ],
        "summary": "Retrieve the total number of corrected defects by Company ID",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "ID of the Company to retrieve the total number of corrected defects",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved the details of corrected defects by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectCorrectedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/search": {
      "post": {
        "tags": [
          "Defect"
        ],
        "summary": "Search Defects",
        "description": "Search for defects based on various criteria.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefectSearchResponse"
              },
              "example": {
                "defectId": 12345,
                "customer": "John Doe",
                "asset": "Asset123",
                "workOrderId": "WO456"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by defect status (e.g., 'pending', 'in_progress', 'corrected')"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with defect search results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectSearchResponse"
                },
                "example": {
                  "status": "success",
                  "messageId": 200,
                  "message": "Defects successfully retrieved.",
                  "data": [
                    {
                      "defectId": 12345,
                      "title": "Defect Title",
                      "status": "pending",
                      "customer": "John Doe",
                      "createdAt": "2023-06-28T11:13:39.347Z"
                    }
                  ],
                  "totalRecords": 1,
                  "defectCounts": {
                    "pending": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid parameters",
                  "message": "Please check your request parameters and try again."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error",
                  "message": "An unexpected error occurred. Please try again later."
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/delete/{defectId}": {
      "delete": {
        "tags": [
          "Defect"
        ],
        "summary": "Delete an Defect by ID",
        "description": "This endpoint deletes Defect by its defectId.",
        "parameters": [
          {
            "name": "defectId",
            "in": "path",
            "description": "ID of the Defect to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Defect deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/get-pending-defects-asset": {
      "get": {
        "tags": [
          "Defect"
        ],
        "summary": "Retrieve a list of pending defects of asset",
        "responses": {
          "200": {
            "description": "Success: Retrieve a list of pending defects of asset",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingDefectsAssetList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/update": {
      "post": {
        "tags": [
          "Defect"
        ],
        "summary": "Update a Defect by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefectUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Defect updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/defect/overdue/{companyId}": {
      "get": {
        "tags": [
          "Defect"
        ],
        "summary": "Retrieve the total number of overdue defects by Company ID",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "ID of the Company to retrieve the total number of overdue defects",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved the details of overdue defects by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectCorrectedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/create": {
      "post": {
        "tags": [
          "Drivers"
        ],
        "summary": "Create a new driver",
        "description": "Create a new driver object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Driver created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/list/{companyId}/{page}/{perPage}": {
      "get": {
        "tags": [
          "Drivers"
        ],
        "summary": "Get a list of drivers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The companyId to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "path",
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "perPage",
            "in": "path",
            "description": "The number of form cards to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Drivers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/get/{driverId}": {
      "get": {
        "tags": [
          "Drivers"
        ],
        "description": "Get driver by driverId",
        "summary": "Get driver by driverId",
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "description": "The ID of the driver to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Driver retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/delete/{driverId}": {
      "delete": {
        "tags": [
          "Drivers"
        ],
        "summary": "Delete a Driver by ID",
        "description": "Delete a Driver by its Driver ID",
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "description": "ID of the driver to be deleted",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Driver deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/sync-fleetspin": {
      "post": {
        "tags": [
          "Drivers"
        ],
        "summary": "Sync-fleetspin",
        "description": "Sync-fleetspin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sync-fleetspin successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/active/{companyId}/{customerId}": {
      "get": {
        "tags": [
          "Drivers"
        ],
        "summary": "Get Active Drivers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve active drivers for.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The ID of the customer to retrieve.",
            "schema": {
              "type": "string",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with active drivers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/invite/{driverId}": {
      "get": {
        "tags": [
          "Drivers"
        ],
        "description": "Invite driver by driverId",
        "summary": "Invite driver by driverId",
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "description": "The ID of the driver to invite.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Driver invited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverInvitationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/invite-all": {
      "post": {
        "tags": [
          "Drivers"
        ],
        "summary": "Send Invite To All Drivers",
        "description": "Send Invite To All Drivers",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Driver created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverInvitationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/get-documents/{driverId}": {
      "get": {
        "tags": [
          "Drivers"
        ],
        "summary": "Get Driver Documents",
        "description": "Retrieve documents for a specific driver.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompany"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "description": "The ID of the driver to retrieve documents.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/delete-document/{driverId}/{documentId}": {
      "post": {
        "tags": [
          "Drivers"
        ],
        "summary": "Delete Driver Document",
        "description": "Delete a specific document for a driver.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDriverDocumentRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "description": "The ID of the driver.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document to be deleted.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Document deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/get-active-for-company-documents": {
      "post": {
        "tags": [
          "Drivers"
        ],
        "summary": "Get Active Drivers For Documents",
        "description": "Get Active Drivers For Documents",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActiveDriversDocumentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get Active Drivers For Documents successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers/upload-document/{driverId}": {
      "post": {
        "tags": [
          "Drivers"
        ],
        "summary": "Upload documents",
        "description": "Upload documents for a specific driver",
        "parameters": [
          {
            "in": "path",
            "name": "driverId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the driver"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadDriverDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Driver document uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadDriverDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forms/create": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "Create a new form",
        "description": "Create a new form object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Form card created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forms/get/{formId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Retrieve a form by ID",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "ID of the form to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forms/get-sample/{formId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Retrieve a form by ID",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "ID of the form to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form card retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forms/get-by-category/{formId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Retrieve a form by ID",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "ID of the form to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form card retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forms/list/{page}/{perPage}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get a list of forms",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "path",
            "required": true,
            "description": "The number of form cards to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form cards retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forms/delete/{formId}": {
      "delete": {
        "tags": [
          "Forms"
        ],
        "summary": "Delete a form by ID",
        "description": "Delete a form by its formId",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "ID of the form to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Form card deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/form-cards/create": {
      "post": {
        "tags": [
          "Form-Cards"
        ],
        "summary": "Create a new form card",
        "description": "Create a new form card object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormCard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Form card created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormCard"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/form-cards/get/{formCardId}": {
      "get": {
        "tags": [
          "Form-Cards"
        ],
        "summary": "Retrieve a form card by ID",
        "parameters": [
          {
            "name": "formCardId",
            "in": "path",
            "required": true,
            "description": "ID of the form card to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form card retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormCard"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/form-cards/list/{page}/{perPage}": {
      "get": {
        "tags": [
          "Form-Cards"
        ],
        "summary": "Get a list of form cards",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "path",
            "required": true,
            "description": "The number of form cards to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form cards retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormCardList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/form-cards/all": {
      "get": {
        "tags": [
          "Form-Cards"
        ],
        "summary": "Retrieve all form cards",
        "responses": {
          "200": {
            "description": "Success: Retrieve all form cards",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormCardAll"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/form-cards/delete/{formCardId}": {
      "delete": {
        "tags": [
          "Form-Cards"
        ],
        "summary": "Delete a form card by ID",
        "description": "Delete a form card by its formCardId",
        "parameters": [
          {
            "name": "formCardId",
            "in": "path",
            "description": "ID of the form card to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Form card deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/form-cards/search": {
      "post": {
        "tags": [
          "Form-Cards"
        ],
        "summary": "Search Form-Cards",
        "description": "Search for Form-Card objects",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormCard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Form-Cards found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormCard"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/industry/create": {
      "post": {
        "tags": [
          "Industry"
        ],
        "summary": "Create a new Industry",
        "description": "This endpoint creates a new industry object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Industry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Industry created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Industry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/industry/get/{IndustryId}": {
      "get": {
        "tags": [
          "Industry"
        ],
        "summary": "Retrieve an industry by ID",
        "parameters": [
          {
            "name": "IndustryId",
            "in": "path",
            "required": true,
            "description": "ID of the industry to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved industry by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Industry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/industry/list": {
      "get": {
        "tags": [
          "Industry"
        ],
        "summary": "Retrieve a list of industries",
        "responses": {
          "200": {
            "description": "Success: Retrieve a list of industries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/industry/delete/{IndustryId}": {
      "delete": {
        "tags": [
          "Industry"
        ],
        "summary": "Delete an Industry by ID",
        "description": "This endpoint deletes an industry by its IndustryId.",
        "parameters": [
          {
            "name": "IndustryId",
            "in": "path",
            "description": "ID of the industry to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Industry deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/industry/active": {
      "get": {
        "tags": [
          "Industry"
        ],
        "summary": "Retrieve a list of active industries",
        "responses": {
          "200": {
            "description": "Success: Retrieved a list of active industries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inspection/forms/create": {
      "post": {
        "tags": [
          "Inspection Forms"
        ],
        "summary": "Create Inspection Forms",
        "description": "Add a new Inspection Forms to the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyFormCreationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inspection Forms created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inspection/forms/list/{companyId}/{page}/{perPage}": {
      "get": {
        "tags": [
          "Inspection Forms"
        ],
        "summary": "Get a list of Inspection Forms",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The companyId to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "path",
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "perPage",
            "in": "path",
            "description": "The number of Inspection Forms to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Inspection Forms retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFormsList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inspection/forms/get/{formId}": {
      "get": {
        "tags": [
          "Inspection Forms"
        ],
        "summary": "Get Inspection Forms by ID",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "The ID of the Inspection Form to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Inspection Forms retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFormResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inspection/forms/delete/{formId}": {
      "delete": {
        "tags": [
          "Inspection Forms"
        ],
        "summary": "Delete a Inspection Form by ID",
        "description": "Delete a specific Inspection Form by its form ID.",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "The ID of the Inspection Forms to be deleted.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Inspection Forms deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inspection/forms/active/{companyId}": {
      "get": {
        "tags": [
          "Inspection Forms"
        ],
        "summary": "Get Active Inspection Forms Forms by Company ID",
        "description": "Retrieve a list of active Inspection Forms for a specific company based on the company ID.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve active Inspection Forms.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Active Inspection Forms retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveCompanyFormsList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inspection/forms/delete-card": {
      "post": {
        "tags": [
          "Inspection Forms"
        ],
        "summary": "Delete card from Inspection Forms",
        "description": "Delete card from Inspection Forms.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCardFromFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Card deleted from Inspection Form successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inspection/forms/add-card": {
      "post": {
        "tags": [
          "Inspection Forms"
        ],
        "summary": "Add Cards to Inspection Forms",
        "description": "Add cards to the Inspection Forms.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCardsToFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cards have been added to the Company Form successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCardsToFormResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inspection/forms/search": {
      "post": {
        "tags": [
          "Inspection Forms"
        ],
        "summary": "Search Inspection Forms by name ",
        "description": "Search Inspection Forms by name",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inspection Forms search by name successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFormResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/legal/update": {
      "post": {
        "tags": [
          "Legal"
        ],
        "summary": "Create a new Legal",
        "description": "This endpoint saves a Legal object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Legal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/legal/get-company": {
      "post": {
        "tags": [
          "Legal"
        ],
        "summary": "Get-company Legal",
        "description": "This endpoint saves a Legal object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Legal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/legal/get": {
      "post": {
        "tags": [
          "Legal"
        ],
        "summary": "Get Legal",
        "description": "This endpoint saves a Legal object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Legal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/stock-detail/create": {
      "post": {
        "tags": [
          "Inventory Stock Detail"
        ],
        "summary": "Create a new Inventory",
        "description": "This endpoint saves a Inventory object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Inventory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/stock-detail/get/{inventoryId}": {
      "get": {
        "tags": [
          "Inventory Stock Detail"
        ],
        "summary": "Return Inventory By Id",
        "description": " Retrieve details of an inventory item by its ID.",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "required": true,
            "description": "The ID of the inventory item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid request or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/stock-detail/list/{companyId}/{page}/{perPage}": {
      "get": {
        "tags": [
          "Inventory Stock Detail"
        ],
        "summary": "Get a list of inventories",
        "description": "Retrieve a paginated list of inventories for a specific company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "The ID of the company to retrieve inventories from.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "description": " The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "path",
            "required": true,
            "description": " The number of inventories to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/stock-detail/get-all/{companyId}": {
      "get": {
        "tags": [
          "Inventory Stock Detail"
        ],
        "summary": "Returns a list of inventories.",
        "description": "Retrieve a paginated list of inventories for a specific company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "The ID of the company to retrieve inventories from.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/stock-detail/delete/{inventoryId}": {
      "delete": {
        "tags": [
          "Inventory Stock Detail"
        ],
        "summary": "Delete inventory by ID",
        "description": "Delete an inventory item based on its ID",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "description": "ID of the inventory item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid request or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An error occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/stock-detail/search": {
      "post": {
        "tags": [
          "Inventory Stock Detail"
        ],
        "summary": "Search Inventory by part name or part number",
        "description": "Search Inventory by part name or part number",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vendor: created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryStockSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/inventory-stock-timeline/create": {
      "post": {
        "tags": [
          "Inventory Stock Timeline"
        ],
        "summary": "Create a new Inventory Stock Timeline",
        "description": "This endpoint saves a Inventory Stock Timeline object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryStockTimelineCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryStockTimelineCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/inventory-stock-timeline/list": {
      "post": {
        "tags": [
          "Inventory Stock Timeline"
        ],
        "summary": "Get List of Inventory Stock Timeline",
        "description": "This endpoint get list of Inventory Stock Timeline.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryStockTimelineListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryStockTimelineListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/inventory-order-timeline/create": {
      "post": {
        "tags": [
          "Inventory Order Timeline"
        ],
        "summary": "Create a new Inventory Order Timeline",
        "description": "This endpoint saves a Inventory Order Timeline object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryOrderTimelineCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryOrrderTimelineCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/inventory-order-timeline/list": {
      "post": {
        "tags": [
          "Inventory Order Timeline"
        ],
        "summary": "Get List of Inventory Order Timeline",
        "description": "This endpoint get list of Inventory Order Timeline.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryOrderTimelineListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryOrderTimelineListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/inventory-order-timeline/get-last-order/{companyId}/{inventoryId}": {
      "get": {
        "tags": [
          "Inventory Order Timeline"
        ],
        "summary": "Get Last Pending Inventory OrderTimeline",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inventoryId",
            "in": "path",
            "description": "The ID of the inventory to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Work Order retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryLastPendingOrderTimeline"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/modules/create": {
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "Create a new Module",
        "description": "Save a Modules object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/modules/get/{moduleId}": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Retrieve a Module by ID",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "description": "ID of the Module to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/modules/list": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Get a list of Modules",
        "responses": {
          "200": {
            "description": "Success: Retrieve a list of Modules",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/modules/delete/{moduleId}": {
      "delete": {
        "tags": [
          "Modules"
        ],
        "summary": "Delete a Module by ID",
        "description": "Delete a Module by its moduleId",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "description": "ID of the Module to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/part-category/create": {
      "post": {
        "tags": [
          "Part Category"
        ],
        "summary": "Create a new Part Category",
        "description": "Create a new Part Category object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartCategoryCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Part Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/part-category/get/{partCategoryId}": {
      "get": {
        "tags": [
          "Part Category"
        ],
        "summary": "Retrieve a Part Category by ID",
        "parameters": [
          {
            "name": "partCategoryId",
            "in": "path",
            "description": "ID of the Part Category to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Part Category retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/part-category/list/{companyId}": {
      "get": {
        "tags": [
          "Part Category"
        ],
        "summary": "Retrieve a list of Part Categories",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "ID of the company to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Part Categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/part-category/delete/{partCategoryId}": {
      "delete": {
        "tags": [
          "Part Category"
        ],
        "summary": "Delete a Part Category by ID",
        "description": "This endpoint deletes a Part Category based on its ID.",
        "parameters": [
          {
            "name": "partCategoryId",
            "in": "path",
            "description": "ID of the Part Category to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Part Category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/near-by-repair-shops/get": {
      "post": {
        "tags": [
          "Market Place"
        ],
        "summary": "Get Nearby Repair Shops",
        "description": "Retrieve nearby repair shops",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NearByRepairShopsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Nearby repair shops retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NearByRepairShopsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/near-by-repair-shops/reviews": {
      "post": {
        "tags": [
          "Market Place"
        ],
        "summary": "Get Repair Shops Reviews",
        "description": "Endpoint for retrieving repair shop reviews",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepairShopsReviewsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Repair shop reviews retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepairShopsReviewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    
    "/api/v1/partners/create": {
      "post": {
        "tags": [
          "Partners"
        ],
        "summary": "Create a new partner",
        "description": "This endpoint creates a new partner object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Partner created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Partner"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/get/{partnerId}": {
      "get": {
        "tags": [
          "Partners"
        ],
        "summary": "Retrieve an partner by ID",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "description": "ID of the partner to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved partner by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Partner"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/list": {
      "get": {
        "tags": [
          "Partners"
        ],
        "summary": "Retrieve a list of partners",
        "responses": {
          "200": {
            "description": "Success: Retrieve a list of partners",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/delete/{partnerId}": {
      "delete": {
        "tags": [
          "Partners"
        ],
        "summary": "Delete an Partner by ID",
        "description": "This endpoint deletes an industry by its partnerId.",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "ID of the partner to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Partner deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/active": {
      "get": {
        "tags": [
          "Partners"
        ],
        "summary": "Retrieve a list of active partners",
        "responses": {
          "200": {
            "description": "Success: Retrieved a list of active partners",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service/create": {
      "post": {
        "tags": [
          "PM-Services"
        ],
        "summary": "Create a new Pm-Service",
        "description": "Save a Pm-Service object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PmService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service/get/{pmServiceId}": {
      "get": {
        "tags": [
          "PM-Services"
        ],
        "summary": "Retrieve a Pm-Service by ID",
        "parameters": [
          {
            "name": "pmServiceId",
            "in": "path",
            "description": "ID of the Pm-Service to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PmService"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service/list": {
      "get": {
        "tags": [
          "PM-Services"
        ],
        "summary": "Get a list of Pm-Services",
        "responses": {
          "200": {
            "description": "Success: Retrieve a list of Pm-Services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PmServiceList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service/delete/{pmServiceId}": {
      "delete": {
        "tags": [
          "PM-Services"
        ],
        "summary": "Delete a Pm-Service by ID",
        "description": "Delete a Pm-Service by its pmServiceId",
        "parameters": [
          {
            "name": "pmServiceId",
            "in": "path",
            "description": "ID of the Pm-Service to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Pm-Service deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service/search": {
      "post": {
        "tags": [
          "PM-Services"
        ],
        "summary": "Search Pm-Service",
        "description": "Search for a Pm-Service object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PmService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Pm-Service found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PmService"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service-package/create": {
      "post": {
        "tags": [
          "PM-Service Package"
        ],
        "summary": "Create a new Pm-Service Package",
        "description": "Save a Pm-Service Package object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PmServicePackage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Pm-Service Package created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service-package/get/{pmServicePackageId}": {
      "get": {
        "tags": [
          "PM-Service Package"
        ],
        "summary": "Retrieve a Pm-Service Package by ID",
        "parameters": [
          {
            "name": "pmServicePackageId",
            "in": "path",
            "required": true,
            "description": "ID of the Pm-Service Package to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Pm-Service Package retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PmServicePackage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service-package/list/{page}/{perPage}": {
      "get": {
        "tags": [
          "PM-Service Package"
        ],
        "summary": "Get a list of Pm-Service Packages",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "path",
            "required": true,
            "description": "The number of Pm-Service Packages to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Pm-Service Packages retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PmServicePackageList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service-package/delete/{pmServicePackageId}": {
      "delete": {
        "tags": [
          "PM-Service Package"
        ],
        "summary": "Delete a Pm-Service Package by ID",
        "description": "Delete a Pm-Service Package by its pmServicePackageId",
        "parameters": [
          {
            "name": "pmServicePackageId",
            "in": "path",
            "description": "ID of the Pm-Service Package to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Pm-Service Package deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pm-service-package/search": {
      "post": {
        "tags": [
          "PM-Service Package"
        ],
        "summary": "Search Pm-Service Package",
        "description": "Search a Pm-Service Package object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PmServicePackage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PmServicePackage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/get-all": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Get All Credit Cards",
        "description": "Endpoint to retrieve all credit cards",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllCreditCardsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Credit cards retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCreditCardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/add-credit-card": {
      "post": {
        "tags": ["Payment"],
        "summary": "Add Credit Card",
        "description": "Endpoint to add a new credit card",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCreditCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Credit Card added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCreditCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/delete-credit-card": {
      "post": {
        "tags": ["Payment"],
        "summary": "Delete Credit Card",
        "description": "Endpoint to delete a credit card",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCreditCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Credit Card deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCreditCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    
    "/api/v1/service-tasks/create": {
      "post": {
        "tags": [
          "Service Tasks"
        ],
        "summary": "Create a new Service-task",
        "description": "Save a Service-task object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service-tasks/get/{servicetaskId}": {
      "get": {
        "tags": [
          "Service Tasks"
        ],
        "summary": "Retrieve a service-task by ID",
        "parameters": [
          {
            "name": "servicetaskId",
            "in": "path",
            "required": true,
            "description": "ID of the service-task to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTask"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service-tasks/list": {
      "get": {
        "tags": [
          "Service Tasks"
        ],
        "summary": "Get a list of Service-Task",
        "responses": {
          "200": {
            "description": "Success: Retrieve a list of Service-Tasks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTaskList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service-tasks/delete/{servicetaskId}": {
      "delete": {
        "tags": [
          "Service Tasks"
        ],
        "summary": "Delete a Service-Task by ID",
        "description": "Delete a Service-Task by its servicetaskId",
        "parameters": [
          {
            "name": "servicetaskId",
            "in": "path",
            "description": "ID of the Service-Task to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service-tasks/search": {
      "post": {
        "tags": [
          "Service Tasks"
        ],
        "summary": "Search Service-task",
        "description": "search a Service-task object",
        "parameters": [
          {
            "name": "servicetaskId",
            "in": "path",
            "required": true,
            "description": "ID of the service-task to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTask"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shared-module//get-timezones": {
      "get": {
        "tags": [
          "Timezones"
        ],
        "summary": "Retrieve a list of Timezones",
        "responses": {
          "200": {
            "description": "Success: Retrieve a list of Timezones",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimezonesList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/create": {
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Create Team",
        "description": "Add a new team to the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Team created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/list/{companyId}/{page}/{perPage}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get a list of Teams",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve teams for.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "path",
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "perPage",
            "in": "path",
            "description": "The number of teams to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Teams retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/get/{teamId}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get Team by ID",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "The ID of the team to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Team retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/delete/{teamId}": {
      "delete": {
        "tags": [
          "Teams"
        ],
        "summary": "Delete a Team by ID",
        "description": "Delete a Team by its team ID",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "ID of the team to be deleted",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Team deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/active/{teamId}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get Active Teams by Company ID",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "ID of the company to retrieve active teams",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Active teams retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/units/create": {
      "post": {
        "tags": [
          "Units"
        ],
        "summary": "Create a new Units",
        "description": "This endpoint saves a Units object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/units/get/{unitId}": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Retrieve a unit by ID",
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "description": "ID of the unit to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Units"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/units/list": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Get a list of units",
        "responses": {
          "200": {
            "description": "Success: Retrieve list of units",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/units/delete/{unitId}": {
      "delete": {
        "tags": [
          "Units"
        ],
        "summary": "Delete a utility by ID",
        "description": "This endpoint deletes a utility by its unitId.",
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "description": "ID of the unit to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/units/active": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Retrieve a list of active units",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/create": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "description": "Creates a new user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created: User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/get/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a user by ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/list/{companyId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a list of users by company ID",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "ID of the company to retrieve the list of users related to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: User list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/delete/{userId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user by ID",
        "description": "This endpoint deletes a user by their userId.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/active/{companyId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a list of active users by ID",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "ID of the company  to retrieve list of active users",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/mechanic/{companyId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a user by ID",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "ID of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/user-auth/login": {
      "post": {
        "tags": [
          "User Auth"
        ],
        "summary": "User Login",
        "description": "Endpoint for user login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client Error: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-auth/sign-up": {
      "post": {
        "tags": ["User Auth"],
        "summary": "User Sign Up",
        "description": "Endpoint for user sign up",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignUpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: User signed up successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client Error: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-auth/email-verification": {
      "post": {
        "tags": ["User Auth"],
        "summary": "Email Verification",
        "description": "Endpoint for user Email Verification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Email Verification request processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEmailVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-auth/phone-verification": {
      "post": {
        "tags": ["User Auth"],
        "summary": "Phone Number Verification",
        "description": "Endpoint for user Phone Number Verification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPhoneNumberVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Phone Number Verification request processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPhoneNumberVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-auth/forgot-password": {
      "post": {
        "tags": ["User Auth"],
        "summary": "Forgot Password",
        "description": "Endpoint for user password reset request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Password reset request processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-auth/reset-password": {
      "post": {
        "tags": [
          "User Auth"
        ],
        "summary": "Reset Password",
        "description": "Endpoint for user reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Reset password request processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-auth/change-password": {
      "patch": {
        "tags": [
          "User Auth"
        ],
        "summary": "Change Password",
        "description": "Endpoint for changing user password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-auth/get-address-components": {
      "post": {
        "tags": [
          "User Auth"
        ],
        "summary": "Get address components",
        "description": "Endpoint for Get address components",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAddressComponentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success:Get address components successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAddressComponentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-auth/get-profile": {
      "post": {
        "tags": [
          "User Auth"
        ],
        "summary": "Get Profile",
        "description": "Endpoint for Get Profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Get Profile successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-auth/update-profile": {
      "patch": {
        "tags": [
          "User Auth"
        ],
        "summary": "Update Profile",
        "description": "Endpoint for updating user profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utility/create": {
      "post": {
        "tags": [
          "Utility"
        ],
        "summary": "Create a new utility",
        "description": "This endpoint saves a utility object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Utility"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utility/get/{utilityId}": {
      "get": {
        "tags": [
          "Utility"
        ],
        "summary": "Retrieve a utility by ID",
        "parameters": [
          {
            "name": "utilityId",
            "in": "path",
            "required": true,
            "description": "ID of the utility to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Utility"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utility/list": {
      "get": {
        "tags": [
          "Utility"
        ],
        "summary": "Retrieve a list of utilities",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilityList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utility/delete/{utilityId}": {
      "delete": {
        "tags": [
          "Utility"
        ],
        "summary": "Delete a utility by ID",
        "description": "This endpoint deletes a utility by its utilityId.",
        "parameters": [
          {
            "name": "utilityId",
            "in": "path",
            "description": "ID of the utility to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utility/active": {
      "get": {
        "tags": [
          "Utility"
        ],
        "summary": "Retrieve a list of active utilities",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilityList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/vendor/create": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Create a new vendor",
        "description": "Create a new vendor object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vendor: created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/vendor/list/{companyId}/{page}/{perPage}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Get a list of vendors",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve vendors from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "path",
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "perPage",
            "in": "path",
            "description": "The number of vendors to display per page (e.g., 10, 25, 50, 100).",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vendors retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/vendor/get/{vendorId}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Get vendor by vendorId",
        "description": "Retrieve a vendor by its vendorId",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "description": "The ID of the vendor to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/vendors/list/{companyId}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Get a list of vendors by companyId",
        "description": "Retrieve a list of vendors based on the provided companyId.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve vendors for.",
            "schema": {
              "type": "string",
              "example": "645d126cde103b18902d68d5"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vendors retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/vendor/delete/{vendorId}": {
      "delete": {
        "tags": [
          "Vendors"
        ],
        "summary": "Delete a vendor by ID",
        "description": "Delete a vendor by its vendor ID",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "description": "The ID of the vendor to be deleted",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/vendor/search": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Search vendor by name or email",
        "description": "Search vendor by name or email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vendor: created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/create": {
      "post": {
        "tags": [
          "Work Order"
        ],
        "summary": "Create a new Work Order",
        "description": "This endpoint creates a new Work Order object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkOrderCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Work Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/list/{companyId}/{page}/{perPage}": {
      "get": {
        "tags": [
          "Work Order"
        ],
        "summary": "Get a list of Work Order",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "path",
            "description": "The page number to retrieve (e.g., 1, 2, 3).",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "path",
            "description": "The number of Work Order to display per page (e.g., 10, 25, 50, 100).",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Work Order retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrdertList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/get/{workOrderId}": {
      "get": {
        "tags": [
          "Work Order"
        ],
        "summary": "Retrieve a Work Order by ID",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "description": "ID of the Work Order to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved Work Order by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderResponsee"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/search": {
      "post": {
        "tags": [
          "Work Order"
        ],
        "summary": "Search Work Order",
        "description": "Search for Work Order based on various criteria.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkOrderSearchRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by defect status (e.g., 'pending', 'in_progress', 'corrected')"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with defect search results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid parameters",
                  "message": "Please check your request parameters and try again."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error",
                  "message": "An unexpected error occurred. Please try again later."
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/update": {
      "post": {
        "tags": [
          "Work Order"
        ],
        "summary": "Update a Work Order by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkOrderUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Work Order updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/delete/{workOrderId}": {
      "delete": {
        "tags": [
          "Work Order"
        ],
        "summary": "Delete an Work Order by ID",
        "description": "This endpoint deletes Work Order by its workOrderId.",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "description": "ID of the Work Order to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Work Order deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/details/{workOrderId}": {
      "get": {
        "tags": [
          "Work Order"
        ],
        "summary": "Retrieve Work Order details by ID",
        "parameters": [
          {
            "name": "defectId",
            "in": "path",
            "required": true,
            "description": "ID of the Work Order to retrieve details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved Work Order details by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderDetailResponsee"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/completed/{companyId}": {
      "get": {
        "tags": [
          "Work Order"
        ],
        "summary": "Retrieve the total number of completed Work Order by Company ID",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "ID of the Company to retrieve the total number of completed Work Order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved the details of completed Work Order by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletedWorkOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/overdue/{companyId}": {
      "get": {
        "tags": [
          "Work Order"
        ],
        "summary": "Retrieve the total number of overdue Work Order by Company ID",
        "parameters": [
          {
            "name": "completed",
            "in": "path",
            "required": true,
            "description": "ID of the Company to retrieve the total number of overdue Work Order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved the details of overdue Work Order by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectCorrectedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/get-pending-defects-asset": {
      "get": {
        "tags": [
          "Defect"
        ],
        "summary": "Retrieve a list of pending defects of asset",
        "responses": {
          "200": {
            "description": "Success: Retrieve a list of pending defects of asset",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingDefectsAssetList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/download-invoice/{workOrderId}": {
      "get": {
        "tags": [
          "Work Order"
        ],
        "summary": "Download Invoice of Work Order by ID",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "description": "ID of the Work Order to Download Invoice.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Download Invoice of Work Order by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderDownloadInvoiceResponsee"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/add-comment-with-document": {
      "post": {
        "tags": [
          "Work Order"
        ],
        "summary": "Add comment with document",
        "description": "This endpoint Add comment with document to Work Order object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddcommentwithDocumentWorkOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Add comment with DocumentWork Order successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddcommentwithDocumentWorkOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maintenance/work-order/upload-invoice": {
      "post": {
        "tags": [
          "Work Order"
        ],
        "summary": "Upload invoice",
        "description": "This endpoint Upload invoice to Work Order object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Upload invoice successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/external-work-order/units": {
      "get": {
        "tags": [
          "External Work Order"
        ],
        "summary": "Retrieve list of units",
        "description": "Get list of units",
        "responses": {
          "200": {
            "description": "Success: Retrieved list of units",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Units"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/external/work-order/details/{workOrderId}": {
      "get": {
        "tags": [
          "External Work Order"
        ],
        "summary": "Retrieve Detail of External Work Order by ID",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "description": "ID of the External Work Order to retrieve details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Retrieved Detail of External Work Order by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalWorkOrderDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/external/work-order/update": {
      "post": {
        "tags": [
          "External Work Order"
        ],
        "summary": "Update a External Work Order by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkOrderExternalUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Work Order updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderExternalUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/external/work-order/download-invoice/{workOrderId}": {
      "get": {
        "tags": [
          "External Work Order"
        ],
        "summary": "Download Invoice of External Work Order by ID",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "description": "ID of the External Work Order to Download Invoice.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Download Invoice of External Work Order by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderDownloadInvoiceResponsee"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/external/work-order/add-comment-with-document": {
      "post": {
        "tags": [
          "External Work Order"
        ],
        "summary": "Add comment with document",
        "description": "This endpoint Add comment with document to External Work Order object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddcommentwithDocumentWorkOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Add comment with DocumentWork Order successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddcommentwithDocumentWorkOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/external/work-order/upload-invoice": {
      "post": {
        "tags": [
          "External Work Order"
        ],
        "summary": "Upload invoice",
        "description": "This endpoint Upload invoice to External Work Order object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success: Upload invoice successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ActivityLogListRequest":{
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          },
          "searchText": {
            "type": "string"
          },
          "searchType": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "companyId",
          "endDate",
          "page",
          "perPage",
          "searchText",
          "searchType",
          "startDate"
        ]
      },
      "ActivityLogListResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": ["userId", "firstName", "lastName", "email"]
                },
                "_id": {
                  "type": "string"
                },
                "type": {
                  "type": "integer"
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "string"
                    },
                    "licensePlate": {
                      "type": "string"
                    },
                    "engineHours": {
                      "type": "string"
                    },
                    "mileage": {
                      "type": "string"
                    }
                  },
                  "required": ["assetId", "licensePlate", "engineHours", "mileage"]
                },
                "workOrder": {
                  "type": "object",
                  "properties": {
                    "workOrderId": {
                      "type": "integer"
                    }
                  },
                  "required": ["workOrderId"]
                },
                "company": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": ["_id", "name"]
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": ["_id", "name"]
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                }
              },
              "required": [
                "user",
                "_id",
                "type",
                "asset",
                "workOrder",
                "company",
                "customer",
                "createdAt",
                "updatedAt",
                "__v"
              ]
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        },
        "required": ["status", "messageId", "message", "data", "totalRecords"]
      },
      "GetAccessoTokenRequest": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "accessToken"
        ],
        "additionalProperties": false
      },
      "GetAccessoTokenResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "company": {
                "type": "string"
              }
            },
            "required": [
              "_id",
              "role",
              "company"
            ],
            "additionalProperties": false
          },
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "user",
          "accessToken"
        ],
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "company": {
                "type": "string"
              }
            },
            "required": [
              "_id",
              "role",
              "company"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "accessToken",
          "user"
        ]
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "ForgotPasswordResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message"
        ]
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "token"
        ]
      },
      "ResetPasswordResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message"
        ]
      },
      "EmailVerificationRequest": {
        "type": "object",
        "properties": {
          "jwtCode": {
            "type": "string"
          },
          "verificationCode": {
            "type": "string"
          }
        },
        "required": [
          "jwtCode",
          "verificationCode"
        ]
      },
      "EmailVerificationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message"
        ]
      },
      "AddAdminRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "country": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "fleetSize": {
            "type": "integer"
          },
          "industry": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "mobilePhone",
          "password",
          "email",
          "country",
          "companyName",
          "fleetSize",
          "industry"
        ]
      },
      "AddAdminResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message"
        ]
      },
      "GetProfileRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          }
        },
        "required": [
          "_id"
        ]
      },
      "GetProfileResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "internationalFormat": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "profilePic": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "countryCode": {
                "type": "string",
                "pattern": "^[A-Z]{2}$"
              },
              "mobilePhone": {
                "type": "string"
              }
            },
            "required": [
              "_id",
              "email",
              "role",
              "firstName",
              "lastName",
              "internationalFormat",
              "createdAt",
              "profilePic",
              "timezone",
              "countryCode",
              "mobilePhone"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "user"
        ]
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "address": {
            "type": "object",
            "properties": {
              "line1": {
                "type": "string"
              },
              "line2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          }
        },
        "required": [
          "address",
          "firstName",
          "lastName",
          "mobilePhone",
          "_id"
        ]
      },
      "UpdateProfileResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "laborPerHour": {
                    "type": "integer"
                  },
                  "laborTax": {
                    "type": "integer"
                  },
                  "taxes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "distanceUnit": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "currency",
                  "laborPerHour",
                  "laborTax",
                  "taxes",
                  "distanceUnit"
                ]
              },
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "internationalFormat": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "timezone": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "abbr": {
                    "type": "string"
                  },
                  "id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name",
                  "abbr",
                  "id"
                ]
              },
              "countryCode": {
                "type": "string"
              },
              "mobilePhone": {
                "type": "string"
              },
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              }
            },
            "required": [
              "_id",
              "company",
              "email",
              "role",
              "firstName",
              "lastName",
              "internationalFormat",
              "createdAt",
              "timezone",
              "countryCode",
              "mobilePhone",
              "addressLine1",
              "addressLine2",
              "city",
              "state",
              "country",
              "zipcode"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "user"
        ]
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          }
        },
        "required": [
          "currentPassword",
          "password",
          "_id"
        ],
        "additionalProperties": false
      },
      "ChangePasswordResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message"
        ],
        "additionalProperties": false
      },
      "CreationDetail": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string"
          },
          "line2": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "format": "email"
          },
          "state": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "Vendor": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "contactPersonEmail": {
              "type": "string",
              "format": "email"
            },
            "contactPersonMobile": {
              "type": "string"
            },
            "addressLine1": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "zipcode": {
              "type": "integer"
            },
            "country": {
              "type": "string"
            }
          }
        },
        "Unit": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "abbr": {
              "type": "string"
            }
          }
        },
        "UnitList": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "messageId": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UnitData"
              }
            }
          }
        },
        "Units": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "messageId": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            },
            "data": {
              "type": "object",
              "$ref": "#/components/schemas/UnitData"
            }
          }
        },
        "UnitData": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "__v": {
              "type": "integer"
            },
            "abbr": {
              "type": "string"
            }
          }
        },
        "UtilityList": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "messageId": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UtilityData"
              }
            }
          }
        },
        "Utility": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "messageId": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            },
            "data": {
              "type": "object",
              "$ref": "#/components/schemas/UtilityData"
            }
          }
        },
        "UtilityData": {
          "type": "array",
          "properties": {
            "_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "image": {
              "$ref": "#/components/schemas/ImageData"
            },
            "createdBy": {
              "type": "string"
            },
            "updatedBy": {
              "type": "string"
            },
            "isDeleted": {
              "type": "boolean"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "__v": {
              "type": "integer"
            }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "status": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "Delete": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "messageId": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "Create": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "messageId": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            }
          }
        }
      },
      "AssetCreationRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "customer": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "assetType": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "assetId": {
            "type": "string"
          },
          "licensePlate": {
            "type": "string"
          },
          "unitNo": {
            "type": "string"
          },
          "vin": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "make": {
            "type": "string"
          },
          "modelYear": {
            "type": "string"
          },
          "mileage": {
            "type": "string"
          },
          "engineHours": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              }
            }
          },
          "comments": {
            "type": "array",
            "items": {}
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "integer"
          },
          "updatedBy": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              }
            }
          },
          "lastService": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "mileage": {
                "type": "integer"
              },
              "engineHours": {
                "type": "integer"
              }
            }
          },
          "pmServicePackage": {
            "type": "string"
          },
          "mileageType": {
            "type": "string"
          }
        }
      },
      "AssetListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "assetType": {
                "type": "string"
              },
              "assetId": {
                "type": "string"
              },
              "licensePlate": {
                "type": "string"
              },
              "unitNo": {
                "type": "string"
              },
              "vin": {
                "type": "string"
              },
              "model": {
                "type": "string"
              },
              "make": {
                "type": "string"
              },
              "modelYear": {
                "type": "string"
              },
              "mileage": {
                "type": "string"
              },
              "engineHours": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdBy": {
                "type": "string"
              },
              "comments": {
                "type": "array",
                "items": {}
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              },
              "updatedBy": {
                "type": "string"
              },
              "lastService": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mileage": {
                    "type": "integer"
                  },
                  "engineHours": {
                    "type": "integer"
                  }
                }
              },
              "pmServicePackage": {
                "type": "string"
              },
              "mileageType": {
                "type": "string"
              }
            }
          }
        }
      },
      "AssetResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "assetType": {
                "type": "string"
              },
              "assetId": {
                "type": "string"
              },
              "licensePlate": {
                "type": "string"
              },
              "unitNo": {
                "type": "string"
              },
              "vin": {
                "type": "string"
              },
              "model": {
                "type": "string"
              },
              "make": {
                "type": "string"
              },
              "modelYear": {
                "type": "string"
              },
              "mileage": {
                "type": "string"
              },
              "engineHours": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdBy": {
                "type": "string"
              },
              "comments": {
                "type": "array",
                "items": {}
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              },
              "updatedBy": {
                "type": "string"
              },
              "lastService": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mileage": {
                    "type": "integer"
                  },
                  "engineHours": {
                    "type": "integer"
                  }
                }
              },
              "pmServicePackage": {
                "type": "string"
              },
              "mileageType": {
                "type": "string"
              }
            }
          }
        }
      },
      "AssetCommentRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "make": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "modelYear": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recallStatus": {
            "type": "string"
          },
          "applyToAll": {
            "type": "boolean"
          },
          "company": {
            "type": "string"
          }
        }
      },
      "GetActiveAssetForPmServicePackage": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "make": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "modelYear": {
            "type": "string"
          },
          "pmServicePackageId": {
            "type": "string"
          },
          "selectedAssets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "page": {
            "type": "integer",
            "minimum": 1
          },
          "perpage": {
            "type": "integer",
            "minimum": 1
          }
        }
      },
      "GetAssetDocumentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "company": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "companyCode"
                ]
              },
              "assetId": {
                "type": "string"
              },
              "documents": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "ActiveAssetDocumentsRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "make": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "modelYear": {
            "type": "string"
          },
          "documentId": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          }
        }
      },
      "AssetDocumentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "assetCounts": {
        "type": "object",
        "properties": {
          "selected": {
            "type": "integer"
          },
          "all": {
            "type": "integer"
          }
        }
      },
      "AssetDocumenDeletetResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  }
                }
              },
              "assetId": {
                "type": "string"
              },
              "documents": {
                "type": "array",
                "items": {}
              }
            }
          }
        }
      },
      "AssetTypeList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTypeData"
            }
          }
        }
      },
      "UploadAssetDocumentRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "file": {
            "type": "string",
            "format": "binary"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          }
        }
      },
      "AssetDocumentUploadRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value",
          "expiration",
          "updatedBy"
        ]
      },
      "UploadAssetDocumentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  }
                }
              },
              "assetId": {
                "type": "string"
              },
              "documents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "originalName": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UploadDriverDocumentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string"
          }
        }
      },
      "UploadCompanyDocumentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string"
          }
        }
      },
      "UploadDriverDocumentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  }
                }
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "fixyDriverId": {
                "type": "string"
              },
              "documents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "originalName": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UploadCompanyDocumentDeleteResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "companyCode": {
                "type": "string"
              },
              "documents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "originalName": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "originalName",
                        "location",
                        "key"
                      ]
                    },
                    "assets": {
                      "type": "array"
                    },
                    "drivers": {
                      "type": "array"
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value",
                    "expiration",
                    "file",
                    "assets",
                    "drivers",
                    "_id"
                  ]
                }
              }
            },
            "required": [
              "_id",
              "companyCode",
              "documents"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "messageId",
          "data"
        ]
      },
      "AssetType": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/AssetTypeData"
          }
        }
      },
      "AssetTypeData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreationDetail"
          },
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "CompanyList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "internationalFormat": {
                      "type": "string"
                    }
                  }
                },
                "billingName": {
                  "type": "string"
                },
                "billingEmail": {
                  "type": "string"
                },
                "companyCode": {
                  "type": "string"
                },
                "activeModules": {
                  "type": "array",
                  "items": {}
                },
                "creditsBalance": {
                  "type": "integer"
                },
                "industry": {
                  "type": "string"
                },
                "fleetSize": {
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                },
                "laborPerHour": {
                  "type": "integer"
                },
                "laborTax": {
                  "type": "integer"
                },
                "taxes": {
                  "type": "array",
                  "items": {}
                },
                "distanceUnit": {
                  "type": "string"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "country": {
                      "type": "string"
                    }
                  }
                },
                "runningIds": {
                  "type": "object",
                  "properties": {
                    "inspectionId": {
                      "type": "integer"
                    },
                    "defectId": {
                      "type": "integer"
                    },
                    "workOrderId": {
                      "type": "integer"
                    },
                    "serviceTaskId": {
                      "type": "integer"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                },
                "customerId": {
                  "type": "string"
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        }
      },
      "ComapnyCount": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "integer"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "mobilePhone": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              },
              "billingName": {
                "type": "string"
              },
              "billingEmail": {
                "type": "string",
                "format": "email"
              },
              "companyCode": {
                "type": "string"
              },
              "activeModules": {
                "type": "array",
                "items": {}
              },
              "creditsBalance": {
                "type": "integer"
              },
              "industry": {
                "type": "string"
              },
              "fleetSize": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "laborPerHour": {
                "type": "integer"
              },
              "laborTax": {
                "type": "integer"
              },
              "taxes": {
                "type": "array",
                "items": {}
              },
              "distanceUnit": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              },
              "runningIds": {
                "type": "object",
                "properties": {
                  "inspectionId": {
                    "type": "integer"
                  },
                  "defectId": {
                    "type": "integer"
                  },
                  "workOrderId": {
                    "type": "integer"
                  },
                  "serviceTaskId": {
                    "type": "integer"
                  }
                }
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              },
              "customerId": {
                "type": "string"
              }
            }
          }
        }
      },
      "CompanyUpdate": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "mobilePhone": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              }
            }
          },
          "billingName": {
            "type": "string"
          },
          "billingEmail": {
            "type": "string",
            "format": "email"
          },
          "companyCode": {
            "type": "string"
          },
          "activeModules": {
            "type": "array",
            "items": {}
          },
          "creditsBalance": {
            "type": "integer"
          },
          "industry": {
            "type": "string"
          },
          "fleetSize": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "laborPerHour": {
            "type": "integer"
          },
          "laborTax": {
            "type": "integer"
          },
          "taxes": {
            "type": "array",
            "items": {}
          },
          "distanceUnit": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "line1": {
                "type": "string"
              },
              "line2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        }
      },
      "CompanyDelete": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          }
        },
        "required": [
          "_id"
        ]
      },
      "GetCompany": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          }
        },
        "required": [
          "companyId"
        ]
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "SuperAdminLoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "internationalFormat": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "timezone": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "offset": {
                    "type": "integer"
                  },
                  "abbr": {
                    "type": "string"
                  },
                  "utc": {
                    "type": "string"
                  },
                  "id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "countryCode": {
                "type": "string"
              },
              "mobilePhone": {
                "type": "string"
              }
            }
          }
        }
      },
      "CustomerCreationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "internationalFormat": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        }
      },
      "CustomerCreationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "phoneExtension": {
            "type": "number"
          },
          "address": {
            "type": "object"
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "partnerName": {
                  "type": "string"
                },
                "isConnected": {
                  "type": "boolean"
                },
                "apiKey": {
                  "type": "string"
                },
                "companyName": {
                  "type": "string"
                },
                "companyCode": {
                  "type": "string"
                }
              }
            }
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "company",
          "email"
        ]
      },
      "CustomerList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "internationalFormat": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "totalRecords": {
            "type": "number"
          }
        }
      },
      "GetCompanyDashboardRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "companyId",
          "endDate",
          "startDate"
        ]
      },
      "GetCompanyDashboardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "DriverCreationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "manager",
              "member"
            ]
          },
          "company": {
            "type": "string"
          },
          "customer": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "_id",
              "name"
            ]
          },
          "mobilePhone": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "fixyDriverId": {
            "type": "string"
          },
          "timezone": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "offset": {
                "type": "number"
              },
              "abbr": {
                "type": "string"
              },
              "utc": {
                "type": "string"
              },
              "id": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name",
              "offset",
              "abbr",
              "utc",
              "id"
            ]
          },
          "isDriver": {
            "type": "boolean"
          },
          "isAccountOwner": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "mobileVerified": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "expiration": {
                  "type": "string",
                  "format": "date-time"
                },
                "file": {
                  "type": "object"
                }
              },
              "required": [
                "source",
                "name",
                "value"
              ]
            }
          },
          "nationalFormat": {
            "type": "string"
          },
          "internationalFormat": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "role",
          "company",
          "customer",
          "firstName",
          "lastName",
          "timezone",
          "isDriver",
          "isAccountOwner",
          "emailVerified",
          "mobileVerified",
          "isDeleted",
          "createdBy"
        ]
      },
      "DriverListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "role": {
                  "type": "string"
                },
                "company": {
                  "type": "string"
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "mobilePhone": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "fixyDriverId": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "timezone": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "offset": {
                      "type": "integer"
                    },
                    "abbr": {
                      "type": "string"
                    },
                    "utc": {
                      "type": "string"
                    },
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "parentPortal": {
                  "type": "string"
                },
                "parentPortalDriverId": {
                  "type": "string"
                },
                "employeeCode": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "class": {
                  "type": "string"
                },
                "isDriver": {
                  "type": "boolean"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "expiration": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "_id": {
                        "type": "string"
                      },
                      "source": {
                        "type": "string"
                      },
                      "file": {
                        "type": "object",
                        "properties": {
                          "originalName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string",
                            "format": "uri"
                          },
                          "key": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "isAccountOwner": {
                  "type": "boolean"
                },
                "emailVerified": {
                  "type": "boolean"
                },
                "mobileVerified": {
                  "type": "boolean"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "nationalFormat": {
                  "type": "string"
                },
                "internationalFormat": {
                  "type": "string"
                },
                "countryCode": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                },
                "deviceInfo": {
                  "type": "object",
                  "properties": {
                    "os": {
                      "type": "string"
                    },
                    "version": {
                      "type": "integer"
                    },
                    "brand": {
                      "type": "string"
                    },
                    "model": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        }
      },
      "DriverResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "mobilePhone": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "fixyDriverId": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "timezone": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "offset": {
                    "type": "integer"
                  },
                  "abbr": {
                    "type": "string"
                  },
                  "utc": {
                    "type": "string"
                  },
                  "id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "parentPortal": {
                "type": "string"
              },
              "parentPortalDriverId": {
                "type": "string"
              },
              "employeeCode": {
                "type": "string"
              },
              "gender": {
                "type": "string"
              },
              "class": {
                "type": "string"
              },
              "isDriver": {
                "type": "boolean"
              },
              "documents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "originalName": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "isAccountOwner": {
                "type": "boolean"
              },
              "emailVerified": {
                "type": "boolean"
              },
              "mobileVerified": {
                "type": "boolean"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdBy": {
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "nationalFormat": {
                "type": "string"
              },
              "internationalFormat": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              },
              "deviceInfo": {
                "type": "object",
                "properties": {
                  "os": {
                    "type": "string"
                  },
                  "version": {
                    "type": "integer"
                  },
                  "brand": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "DriverInvitationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer",
            "const": 200
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DriverDocumentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  }
                }
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "fixyDriverId": {
                "type": "string"
              },
              "documents": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "DeleteDriverDocumentRequest": {
        "type": "object",
        "properties": {
          "updatedBy": {
            "type": "string"
          }
        },
        "required": [
          "updatedBy"
        ]
      },
      "ActiveDriversDocumentsRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "documentId": {
            "type": "string"
          },
          "searchText": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          }
        }
      },
      "DefectCreationRequest": {
        "type": "object",
        "properties": {
          "asset": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "format": "uuid"
              },
              "assetId": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE"
                ]
              }
            },
            "required": [
              "_id",
              "assetId",
              "status"
            ]
          },
          "categoryName": {
            "type": "string"
          },
          "company": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "customer": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "_id",
              "name"
            ]
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "asset",
          "categoryName",
          "company",
          "createdBy",
          "customer",
          "description",
          "title",
          "updatedBy"
        ]
      },
      "DefectUpdateRequest": {
        "type": "object",
        "properties": {
          "asset": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "assetId": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "required": [
              "_id",
              "assetId",
              "status"
            ]
          },
          "categoryName": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "customer": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "_id",
              "name"
            ]
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          }
        },
        "required": [
          "asset",
          "categoryName",
          "company",
          "createdBy",
          "customer",
          "description",
          "title",
          "updatedBy"
        ]
      },
      "DefectList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "defectId": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                },
                "categoryName": {
                  "type": "string"
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "assetId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "assetId"
                  ]
                },
                "priority": {
                  "type": "integer"
                },
                "status": {
                  "type": "integer"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer"
          },
          "defectCounts": {
            "type": "object",
            "properties": {
              "pending": {
                "type": "integer"
              },
              "inProgress": {
                "type": "integer"
              },
              "corrected": {
                "type": "integer"
              }
            }
          }
        }
      },
      "DefectUpdateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message"
        ]
      },
      "DefectCreationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message"
        ]
      },
      "DefectResponsee": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "defectId": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "categoryName": {
                "type": "string"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "pictures": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "key": {
                      "type": "string"
                    },
                    "datetime": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "company": {
                "type": "string"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "name"
                ]
              },
              "asset": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "assetId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              },
              "priority": {
                "type": "integer"
              },
              "status": {
                "type": "integer"
              },
              "createdBy": {
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "comments": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            }
          }
        }
      },
      "DefectSearchRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "The ID of the company."
          },
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "The end date for the search."
          },
          "page": {
            "type": "integer",
            "description": "The page number to retrieve."
          },
          "perPage": {
            "type": "integer",
            "description": "The number of items to display per page."
          },
          "searchText": {
            "type": "string",
            "description": "The search text to match."
          },
          "searchType": {
            "type": "string",
            "description": "The type of search to perform."
          },
          "startDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "The start date for the search."
          },
          "status": {
            "type": "integer",
            "description": "The status value for filtering. 0-Pending, 1-In progress, 2-Corrected"
          }
        },
        "required": [
          "companyId",
          "endDate",
          "page",
          "perPage",
          "searchText",
          "searchType",
          "startDate",
          "status"
        ]
      },
      "DefectSearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "defectId": {
                  "type": "number"
                },
                "title": {
                  "type": "string"
                },
                "categoryName": {
                  "type": "string"
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "assetId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "assetId"
                  ]
                },
                "priority": {
                  "type": "number"
                },
                "status": {
                  "type": "number"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "_id",
                "defectId",
                "title",
                "categoryName",
                "customer",
                "asset",
                "priority",
                "status",
                "isDeleted",
                "createdAt",
                "updatedAt"
              ]
            }
          },
          "totalRecords": {
            "type": "number"
          },
          "defectCounts": {
            "type": "object",
            "properties": {
              "pending": {
                "type": "number"
              }
            },
            "required": [
              "pending"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data",
          "totalRecords",
          "defectCounts"
        ]
      },
      "DefectDetailResponsee": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "defectId": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "categoryName": {
                "type": "string"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "pictures": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "uri"
                    },
                    "key": {
                      "type": "string"
                    },
                    "datetime": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "uri",
                    "key",
                    "datetime"
                  ]
                }
              },
              "company": {
                "type": "string"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "name"
                ]
              },
              "asset": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "assetId": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "assetId"
                ]
              },
              "priority": {
                "type": "integer"
              },
              "status": {
                "type": "integer"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "updatedBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "isDeleted": {
                "type": "boolean"
              },
              "comments": {
                "type": "array",
                "items": {},
                "default": []
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            },
            "required": [
              "_id",
              "defectId",
              "title",
              "categoryName",
              "pictures",
              "company",
              "customer",
              "asset",
              "priority",
              "status",
              "createdBy",
              "updatedBy",
              "isDeleted",
              "comments",
              "createdAt",
              "updatedAt",
              "__v"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "DefectCorrectedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "integer"
          }
        },
        "required": [
          "status",
          "messageId",
          "data"
        ]
      },
      "PendingDefectsAssetList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "defectId": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                },
                "categoryName": {
                  "type": "string"
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "assetId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "assetId"
                  ]
                },
                "priority": {
                  "type": "integer"
                },
                "status": {
                  "type": "integer"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "_id",
                "defectId",
                "title",
                "categoryName",
                "description",
                "customer",
                "asset",
                "priority",
                "status",
                "isDeleted",
                "createdAt",
                "updatedAt"
              ]
            }
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "GetActiveModuleBody": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "moduleCode": {
            "type": "string"
          }
        },
        "required": [
          "companyId",
          "moduleCode"
        ]
      },
      "GetActiveModule": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "643467687f5ebd2b047b8cf1"
          },
          "name": {
            "type": "string",
            "example": "Inspection & Compliance"
          },
          "description": {
            "type": "string",
            "example": "Inspection & Compliance"
          },
          "charges": {
            "type": "string",
            "example": "5.00"
          },
          "code": {
            "type": "string",
            "example": "INS"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "discountPercentage": {
            "type": "integer",
            "example": 0
          },
          "trialDays": {
            "type": "integer",
            "example": 0
          },
          "trialStartDate": {
            "type": "null",
            "example": null
          },
          "selectedEmail": {
            "type": "string",
            "example": ""
          },
          "sendEmail": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "GetDashboardPreferences": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "dashboardPreferences": {
                "type": "object",
                "properties": {
                  "maintenanceSummary": {
                    "type": "boolean"
                  },
                  "inspectionSummary": {
                    "type": "boolean"
                  }
                }
              },
              "_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "CompanyUploadDocumentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "companyCode": {
                "type": "string"
              },
              "documents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "originalName": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "originalName",
                        "location",
                        "key"
                      ]
                    },
                    "assets": {
                      "type": "array"
                    },
                    "drivers": {
                      "type": "array"
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value",
                    "expiration",
                    "file",
                    "_id"
                  ]
                }
              }
            },
            "required": [
              "_id",
              "companyCode",
              "documents"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "messageId",
          "data"
        ]
      },
      "AddDocumentToAssetBody": {
        "type": "object",
        "properties": {
          "updatedBy": {
            "type": "string"
          },
          "document": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "file": {
                "type": "object",
                "properties": {
                  "originalName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string",
                    "format": "uri"
                  },
                  "key": {
                    "type": "string"
                  }
                }
              },
              "assets": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "type": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          }
        }
      },
      "DeleteDocument": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          }
        },
        "required": [
          "documentId",
          "updatedBy"
        ]
      },
      "UploadDocument": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string"
          }
        }
      },
      "GenerateCurrentBill": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "activeModules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "charges": {
                      "type": "number"
                    },
                    "discountPercentage": {
                      "type": "number"
                    },
                    "discountAmount": {
                      "type": "number"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "moduleTotal": {
                      "type": "number"
                    },
                    "unit": {
                      "type": "string"
                    }
                  }
                }
              },
              "status": {
                "type": "integer"
              },
              "amount": {
                "type": "number"
              },
              "finalAmount": {
                "type": "number"
              },
              "creditsAmount": {
                "type": "number"
              },
              "taxPercentage": {
                "type": "string"
              },
              "taxAmount": {
                "type": "string"
              },
              "timePeriod": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "processingFeePercentage": {
                "type": "number"
              },
              "processingFeeAmount": {
                "type": "number"
              },
              "invoiceAmount": {
                "type": "string"
              }
            }
          }
        }
      },
      "CompanyNotifications": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "type": {
                  "type": "integer"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "isRead": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "NotificationsMarkRead": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "type": {
                  "type": "integer"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "isRead": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "CompanyDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "creditsBalance": {
                "type": "integer"
              },
              "activeModules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "charges": {
                      "type": "number"
                    },
                    "code": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "discountPercentage": {
                      "type": "number"
                    },
                    "trialDays": {
                      "type": "integer"
                    },
                    "trialStartDate": {
                      "type": "null"
                    },
                    "selectedEmail": {
                      "type": "string"
                    },
                    "sendEmail": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FormList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "driverSignature": {
                  "type": "boolean"
                },
                "mechanicSignature": {
                  "type": "boolean"
                },
                "certifiedInspectorSignature": {
                  "type": "boolean"
                },
                "exceptionReportReminder": {
                  "type": "boolean"
                },
                "vehicleTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "formCards": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "industry": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "utilities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "createdBy": {
                  "type": "string"
                },
                "updatedBy": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                },
                "assetTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        }
      },
      "Form": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "number",
            "const": 200
          },
          "message": {
            "type": "string",
            "const": "Data successfully retreived."
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "exceptionReportReminder": {
                "type": "boolean"
              },
              "vehicleTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "formCards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "focusOn": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "focusOn",
                    "title"
                  ]
                }
              },
              "industry": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                }
              },
              "utilities": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                }
              },
              "createdBy": {
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "number"
              },
              "assetTypes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                }
              },
              "signatureType": {
                "type": "string"
              }
            }
          }
        }
      },
      "FormCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "exceptionReportReminder": {
            "type": "boolean"
          },
          "vehicleTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "formCards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "focusOn": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "focusOn",
                "title"
              ]
            }
          },
          "industry": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "name"
              ]
            }
          },
          "utilities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "name"
              ]
            }
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "assetTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "name"
              ]
            }
          },
          "signatureType": {
            "type": "string"
          }
        }
      },
      "FormCardAll": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "focusOn": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "FormCardList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "cardType": {
                  "type": "integer",
                  "format": "int32"
                },
                "focusOn": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "pictures": {
                        "type": "null"
                      },
                      "status": {
                        "type": "null"
                      },
                      "isPicture": {
                        "type": "boolean"
                      },
                      "isRequired": {
                        "type": "boolean"
                      },
                      "createDefect": {
                        "type": "boolean"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FormCard": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "cardType": {
                "type": "integer",
                "format": "int32"
              },
              "focusOn": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "steps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "pictures": {
                      "type": "null"
                    },
                    "status": {
                      "type": "null"
                    },
                    "isPicture": {
                      "type": "boolean"
                    },
                    "isRequired": {
                      "type": "boolean"
                    },
                    "createDefect": {
                      "type": "boolean"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              },
              "status": {
                "type": "integer",
                "format": "int32"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdBy": {
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "CompanyFormsList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "driverSignature": {
                  "type": "boolean"
                },
                "mechanicSignature": {
                  "type": "boolean"
                },
                "certifiedInspectorSignature": {
                  "type": "boolean"
                },
                "exceptionReportReminder": {
                  "type": "boolean"
                },
                "assetTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "formCards": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "industry": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "utilities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "createdBy": {
                  "type": "string"
                },
                "updatedBy": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        }
      },
      "CompanyFormResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer",
            "minimum": 200
          },
          "message": {
            "type": "string",
            "pattern": "^Data successfully retreived\\.$"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "pattern": "^[0-9a-f]{24}$"
              },
              "name": {
                "type": "string"
              },
              "exceptionReportReminder": {
                "type": "boolean"
              },
              "formCards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cardType": {
                      "type": "integer"
                    },
                    "focusOn": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "steps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "defect": {
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "serviceTask": {
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "pictures": {
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "status": {
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "isPicture": {
                            "type": "boolean"
                          },
                          "isRequired": {
                            "type": "boolean"
                          },
                          "createDefect": {
                            "type": "boolean"
                          },
                          "_id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{24}$"
                          }
                        }
                      }
                    },
                    "_id": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{24}$"
                    }
                  }
                }
              },
              "assetTypes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{24}$"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                }
              },
              "signatureType": {
                "type": "string",
                "enum": [
                  "Driver"
                ]
              }
            }
          }
        }
      },
      "CompanyFormCreationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "driverSignature": {
            "type": "boolean",
            "default": false
          },
          "mechanicSignature": {
            "type": "boolean",
            "default": false
          },
          "certifiedInspectorSignature": {
            "type": "boolean",
            "default": false
          },
          "exceptionReportReminder": {
            "type": "boolean",
            "default": false
          },
          "formCards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cardType": {
                  "type": "number"
                },
                "focusOn": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "enum": [
                    0,
                    1,
                    2
                  ]
                },
                "selected": {
                  "type": "number"
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "defect": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "serviceTask": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "pictures": {
                        "type": "array"
                      },
                      "status": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ]
                      },
                      "isPicture": {
                        "type": "boolean"
                      },
                      "isRequired": {
                        "type": "boolean"
                      },
                      "createDefect": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "name",
                      "value",
                      "comment",
                      "defect",
                      "serviceTask",
                      "pictures",
                      "status",
                      "isPicture",
                      "isRequired",
                      "createDefect"
                    ]
                  }
                },
                "photoReference": {
                  "type": "object"
                }
              },
              "required": [
                "cardType",
                "focusOn",
                "title",
                "status",
                "selected",
                "steps",
                "photoReference"
              ]
            }
          },
          "assetTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "company": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "isDeleted": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "name",
          "formCards",
          "assetTypes",
          "company",
          "createdBy",
          "updatedBy"
        ]
      },
      "ActiveCompanyFormsList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer",
            "minimum": 200
          },
          "message": {
            "type": "string",
            "pattern": "^Data successfully retreived\\.$"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{24}$"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "DeleteCardFromFormRequest": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "pattern": "^[0-9a-f]{24}$"
          },
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{24}$"
          }
        }
      },
      "AddCardsToFormRequest": {
        "type": "object",
        "properties": {
          "cardType": {
            "type": "string"
          },
          "focusOn": {
            "type": "string"
          },
          "isPicture": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "status": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ]
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                },
                "pictures": {
                  "type": [
                    "array",
                    "null"
                  ]
                },
                "status": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "enum": [
                    0,
                    1
                  ]
                },
                "isPicture": {
                  "type": "boolean"
                },
                "isRequired": {
                  "type": "boolean"
                },
                "createDefect": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "value",
                "comment",
                "pictures",
                "status",
                "isPicture",
                "isRequired",
                "createDefect"
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{24}$"
          }
        },
        "required": [
          "cardType",
          "focusOn",
          "isPicture",
          "isRequired",
          "status",
          "steps",
          "title",
          "id"
        ]
      },
      "AddCardsToFormResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message"
        ]
      },
      "ImageData": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "IndustryList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndustryData"
            }
          }
        }
      },
      "Industry": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/IndustryData"
          }
        }
      },
      "IndustryData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/ImageData"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "InventoryList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryData"
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        }
      },
      "Inventory": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/InventoryData"
          },
          "totalRecords": {
            "type": "integer"
          }
        }
      },
      "InventoryData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "partName": {
            "type": "string"
          },
          "partNumber": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "vendorPrice": {
            "type": "number"
          },
          "sellingPrice": {
            "type": "number"
          },
          "quantity": {
            "type": "integer"
          },
          "criticalQty": {
            "type": "integer"
          },
          "manufacturerName": {
            "type": "string"
          },
          "manufacturerPartNumber": {
            "type": "string"
          },
          "partCategory": {
            "$ref": "#/components/schemas/PartCategory"
          },
          "vendor": {
            "$ref": "#/components/schemas/Vendor"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "InventoryStockSearchResponse": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "company": {
                  "type": "string"
                },
                "partName": {
                  "type": "string"
                },
                "partNumber": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "vendorPrice": {
                  "type": "number"
                },
                "sellingPrice": {
                  "type": "number"
                },
                "quantity": {
                  "type": "integer"
                },
                "criticalQty": {
                  "type": "integer"
                },
                "minReorderQty": {
                  "type": "integer"
                },
                "manufacturerName": {
                  "type": "string"
                },
                "manufacturerPartNumber": {
                  "type": "string"
                },
                "warrantyMonths": {
                  "type": "integer"
                },
                "warrantyMileage": {
                  "type": "integer"
                },
                "warrantyDocument": {
                  "type": "string"
                },
                "unit": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "abbr": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "abbr"
                  ]
                },
                "createdBy": {
                  "type": "string"
                },
                "updatedBy": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "integer"
                },
                "__v": {
                  "type": "integer"
                },
                "automaticOrder": {
                  "type": "boolean"
                },
                "contactInfo": {
                  "type": "string"
                },
                "placeOrderAtEmail": {
                  "type": "string",
                  "format": "email"
                },
                "vendor": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "contactPersonEmail": {
                      "type": "string",
                      "format": "email"
                    },
                    "contactPersonMobile": {
                      "type": "string",
                      "pattern": "^[+][0-9]+$"
                    },
                    "addressLine1": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zipcode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name",
                    "contactPersonEmail",
                    "contactPersonMobile",
                    "city",
                    "state",
                    "zipcode",
                    "country"
                  ]
                },
                "vendorPartNumber": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "company",
                "partName",
                "vendorPrice",
                "sellingPrice",
                "quantity",
                "criticalQty",
                "minReorderQty",
                "unit",
                "createdBy",
                "updatedBy",
                "isDeleted",
                "createdAt",
                "updatedAt",
                "status",
                "__v",
                "automaticOrder",
                "contactInfo",
                "placeOrderAtEmail",
                "vendor",
                "vendorPartNumber"
              ]
            }
          },
          "inventorySum": {
            "type": "string",
            "pattern": "^[0-9,.]+$"
          },
          "totalRecords": {
            "type": "integer"
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data",
          "inventorySum",
          "totalRecords"
        ]
      },
      "InventoryStockTimelineCreationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "company": {
                "type": "string"
              },
              "inventory": {
                "type": "string"
              },
              "unit": {
                "type": "string"
              },
              "vendor": {
                "type": "string"
              },
              "status": {
                "type": "integer"
              },
              "currentVendorPrice": {
                "type": "number"
              },
              "currentQuantity": {
                "type": "integer"
              },
              "newQuantity": {
                "type": "integer"
              },
              "totalQuantity": {
                "type": "integer"
              },
              "orderBy": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "_id": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            },
            "required": [
              "company",
              "inventory",
              "unit",
              "vendor",
              "status",
              "currentVendorPrice",
              "currentQuantity",
              "newQuantity",
              "totalQuantity",
              "orderBy",
              "isDeleted",
              "_id",
              "createdAt",
              "updatedAt",
              "__v"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "InventoryStockTimelineCreationRequest": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string"
          },
          "currentQuantity": {
            "type": "integer"
          },
          "currentVendorPrice": {
            "type": "integer"
          },
          "inventory": {
            "type": "string"
          },
          "newQuantity": {
            "type": "integer"
          },
          "orderBy": {
            "type": "string"
          },
          "totalQuantity": {
            "type": "integer"
          },
          "unit": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          }
        },
        "required": [
          "company",
          "currentQuantity",
          "currentVendorPrice",
          "inventory",
          "newQuantity",
          "orderBy",
          "totalQuantity",
          "unit",
          "vendor"
        ]
      },
      "InventoryStockTimelineListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "company": {
                  "type": "string"
                },
                "inventory": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "partName": {
                      "type": "string"
                    },
                    "partNumber": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "partName",
                    "partNumber"
                  ]
                },
                "unit": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "abbr": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "abbr"
                  ]
                },
                "vendor": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                },
                "oldVendorPrice": {
                  "type": "integer"
                },
                "oldQuantity": {
                  "type": "integer"
                },
                "newVendorPrice": {
                  "type": "integer"
                },
                "newQuantity": {
                  "type": "integer"
                },
                "totalQuantity": {
                  "type": "integer"
                },
                "averageVendorPrice": {
                  "type": "number"
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "firstName",
                    "lastName"
                  ]
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                }
              },
              "required": [
                "_id",
                "company",
                "inventory",
                "unit",
                "vendor",
                "oldVendorPrice",
                "oldQuantity",
                "newVendorPrice",
                "newQuantity",
                "totalQuantity",
                "averageVendorPrice",
                "updatedBy",
                "isDeleted",
                "createdAt",
                "updatedAt",
                "__v"
              ]
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        },
        "required": [
          "status",
          "messageId",
          "data",
          "totalRecords"
        ]
      },
      "InventoryStockTimelineListRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          },
          "searchText": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "companyId",
          "endDate",
          "page",
          "perPage",
          "searchText",
          "startDate"
        ]
      },
      "InventoryOrderTimelineCreationRequest": {
        "type": "object",
        "properties": {
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedBy": {
            "type": "string"
          },
          "orderBy": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "_id": {
            "type": "string"
          }
        },
        "required": [
          "completedAt",
          "completedBy",
          "orderBy",
          "status",
          "_id"
        ]
      },
      "InventoryOrrderTimelineCreationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "newQuantity": {
                "type": "integer"
              }
            },
            "required": [
              "_id",
              "newQuantity"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "InventoryOrderTimelineListRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "inventoryId": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "companyId",
          "endDate",
          "inventoryId",
          "page",
          "perPage",
          "startDate"
        ]
      },
      "InventoryOrderTimelineListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "company": {
                  "type": "string"
                },
                "inventory": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "partName": {
                      "type": "string"
                    },
                    "partNumber": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "partName",
                    "partNumber"
                  ]
                },
                "unit": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "abbr": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "abbr"
                  ]
                },
                "vendor": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                },
                "status": {
                  "type": "integer"
                },
                "currentVendorPrice": {
                  "type": "number"
                },
                "currentQuantity": {
                  "type": "integer"
                },
                "newQuantity": {
                  "type": "integer"
                },
                "totalQuantity": {
                  "type": "integer"
                },
                "orderBy": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                },
                "completedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "completedBy": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "company",
                "inventory",
                "unit",
                "vendor",
                "status",
                "currentVendorPrice",
                "currentQuantity",
                "newQuantity",
                "totalQuantity",
                "orderBy",
                "isDeleted",
                "createdAt",
                "updatedAt",
                "__v",
                "completedAt",
                "completedBy"
              ]
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        },
        "required": [
          "status",
          "messageId",
          "data",
          "totalRecords"
        ]
      },
      "InventoryLastPendingOrderTimeline": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer",
            "minimum": 200
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "newQuantity": {
                "type": "integer"
              }
            },
            "required": [
              "newQuantity"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "GetAllCreditCardsRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          }
        },
        "required": ["customerId"]
      },
      "GetAllCreditCardsResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the response",
            "example": "success"
          },
          "messageId": {
            "type": "integer",
            "description": "The ID of the message",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "The message",
            "example": "SuccessRetreivingData"
          },
          "data": {
            "type": "array",
            "description": "The data containing cards",
            "items": {
              "type": "object"
            }
          }
        },
        "required": ["status", "messageId", "message", "data"],
        "additionalProperties": false
      },
      "AddCreditCardRequest":{
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          }
        },
        "required": ["paymentMethod", "customerId"],
        "additionalProperties": false
      },
      "AddCreditCardResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "messageId": {
            "type": "integer",
            "const": 200
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["status", "messageId", "message"],
        "additionalProperties": false
      },
      "DeleteCreditCardRequest":{
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string"
          }
        },
        "required": ["paymentMethod"]
      },
      "DeleteCreditCardResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "messageId": {
            "type": "integer",
            "const": 200
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["status", "messageId", "message"],
        "additionalProperties": false
      },
      "LastSyncTime": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "driversLastSync": {
                "type": "string",
                "format": "date-time"
              },
              "company": {
                "type": "string"
              },
              "__v": {
                "type": "integer"
              },
              "assetsLastSync": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "PartCategory": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PartnerList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartnerData"
            }
          }
        }
      },
      "TimezonesList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "abbr": {
                  "type": "string"
                },
                "offset": {
                  "type": "integer"
                },
                "isdst": {
                  "type": "boolean"
                },
                "text": {
                  "type": "string"
                },
                "utc": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "utc_time": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "PmServiceList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "serviceTasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": {
                  "type": "string"
                },
                "mileage": {
                  "type": "integer"
                },
                "engineHours": {
                  "type": "integer"
                },
                "dueDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "ends": {
                  "type": "string"
                },
                "endsOn": {
                  "type": "null"
                },
                "endsAfterOccurrences": {
                  "type": "null"
                },
                "repeatAfter": {
                  "type": "null"
                },
                "repeatInterval": {
                  "type": "string"
                },
                "reminderMiles": {
                  "type": "integer"
                },
                "reminderHours": {
                  "type": "integer"
                },
                "reminder": {
                  "type": "integer"
                },
                "reminderInterval": {
                  "type": "string"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "PmService": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "serviceTasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                }
              },
              "type": {
                "type": "string"
              },
              "mileage": {
                "type": "integer"
              },
              "engineHours": {
                "type": "integer"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time"
              },
              "ends": {
                "type": "string"
              },
              "endsOn": {
                "type": "null"
              },
              "endsAfterOccurrences": {
                "type": "null"
              },
              "repeatAfter": {
                "type": "null"
              },
              "repeatInterval": {
                "type": "string"
              },
              "reminderMiles": {
                "type": "integer"
              },
              "reminderHours": {
                "type": "integer"
              },
              "reminder": {
                "type": "integer"
              },
              "reminderInterval": {
                "type": "string"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              },
              "updatedBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            }
          }
        }
      },
      "ServiceTaskList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "labor": {
                  "type": "integer"
                },
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "defaultLPT": {
                  "type": "string"
                },
                "labour": {
                  "type": "integer"
                },
                "parts": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "ServiceTask": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "items": {
              "type": "object",
              "properties": {
                "labor": {
                  "type": "integer"
                },
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "defaultLPT": {
                  "type": "string"
                },
                "labour": {
                  "type": "integer"
                },
                "parts": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "Partner": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/PartnerData"
          }
        }
      },
      "PartnerData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "PartCategoryCreationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "company"
        ]
      },
      "PartCategoryResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "_id": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "number"
              }
            }
          }
        }
      },
      "PartCategoryList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "messageId": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{24}$"
                },
                "name": {
                  "type": "string"
                },
                "company": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{24}$"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "TeamCreationRequest": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "description": "The ID of the company associated with the team"
          },
          "name": {
            "type": "string",
            "description": "The name of the team"
          },
          "about": {
            "type": "string",
            "description": "Additional information about the team"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "The ID of the user who created the team"
              },
              "firstName": {
                "type": "string",
                "description": "The first name of the user who created the team"
              },
              "lastName": {
                "type": "string",
                "description": "The last name of the user who created the team"
              }
            }
          },
          "updatedBy": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "The ID of the user who last updated the team"
              },
              "firstName": {
                "type": "string",
                "description": "The first name of the user who last updated the team"
              },
              "lastName": {
                "type": "string",
                "description": "The last name of the user who last updated the team"
              }
            }
          }
        }
      },
      "TeamCreationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the response"
          },
          "messageId": {
            "type": "integer",
            "description": "The ID of the message"
          },
          "message": {
            "type": "string",
            "description": "The message associated with the response"
          },
          "data": {
            "type": "object",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "The ID of the team"
                },
                "company": {
                  "type": "string",
                  "description": "The ID of the company associated with the team"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the team"
                },
                "about": {
                  "type": "string",
                  "description": "Additional information about the team"
                },
                "isDeleted": {
                  "type": "boolean",
                  "description": "Indicates if the team is deleted"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The ID of the user who created the team"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of the user who created the team"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user who created the team"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user who created the team"
                    }
                  }
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The ID of the user who last updated the team"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of the user who last updated the team"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user who last updated the team"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user who last updated the team"
                    }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp indicating when the team was created"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp indicating when the team was last updated"
                },
                "__v": {
                  "type": "integer",
                  "description": "The version of the team"
                },
                "users": {
                  "type": "integer",
                  "description": "The number of users in the team"
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer",
            "description": "The total number of records"
          }
        }
      },
      "TeamListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the response"
          },
          "messageId": {
            "type": "integer",
            "description": "The ID of the message"
          },
          "message": {
            "type": "string",
            "description": "The message associated with the response"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "The ID of the team"
                },
                "company": {
                  "type": "string",
                  "description": "The ID of the company associated with the team"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the team"
                },
                "about": {
                  "type": "string",
                  "description": "Additional information about the team"
                },
                "isDeleted": {
                  "type": "boolean",
                  "description": "Indicates if the team is deleted"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The ID of the user who created the team"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of the user who created the team"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user who created the team"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user who created the team"
                    }
                  }
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The ID of the user who last updated the team"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of the user who last updated the team"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user who last updated the team"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user who last updated the team"
                    }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp indicating when the team was created"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp indicating when the team was last updated"
                },
                "__v": {
                  "type": "integer",
                  "description": "The version of the team"
                },
                "users": {
                  "type": "integer",
                  "description": "The number of users in the team"
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer",
            "description": "The total number of records"
          }
        }
      },
      "Vendor": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "contactPersonEmail": {
            "type": "string",
            "format": "email"
          },
          "contactPersonMobile": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipcode": {
            "type": "integer"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Unit": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "abbr": {
            "type": "string"
          }
        }
      },
      "UnitList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitData"
            }
          }
        }
      },
      "Units": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "name"
              ]
            }
          }
        },
        "required": [
          "status",
          "message",
          "messageId",
          "data"
        ]
      },
      "UnitData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "integer"
          },
          "abbr": {
            "type": "string"
          }
        }
      },
      "CompanyAsset": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          }
        }
      },
      "UserList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserData"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/UserData"
          }
        }
      },
      "UserData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "awsDirectory": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "timezone": {
            "type": "object",
            "$ref": "#/components/schemas/Timezone"
          },
          "isAccountOwner": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "mobileVerified": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "documents": {
            "type": "array"
          },
          "nationalFormat": {
            "type": "string"
          },
          "internationalFormat": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "integer"
          },
          "company": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "UtilityList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtilityData"
            }
          }
        }
      },
      "ModuleList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "charges": {
                "type": "integer"
              },
              "code": {
                "type": "string"
              },
              "createdBy": {
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            }
          }
        }
      },
      "Module": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "charges": {
                "type": "integer"
              },
              "code": {
                "type": "string"
              },
              "createdBy": {
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            }
          }
        }
      },
      "Utility": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/UtilityData"
          }
        }
      },
      "CompanyAssetType": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string",
            "example": "Data successfully retrieved."
          },
          "messageId": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "645babbee800690fe3f42252"
                },
                "name": {
                  "type": "string",
                  "example": "Trailer"
                }
              }
            }
          }
        }
      },
      "UtilityData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/ImageData"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "VendorCreationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "contactPersonEmail": {
            "type": "string"
          },
          "contactPersonMobile": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "VendorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "vendorNumber": {
                "type": "string"
              },
              "contactPersonName": {
                "type": "string"
              },
              "placeOrderAtEmail": {
                "type": "string",
                "format": "email"
              },
              "contactPersonEmail": {
                "type": "string",
                "format": "email"
              },
              "contactPersonMobile": {
                "type": "string"
              },
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "createdBy": {
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "nationalFormat": {
                "type": "string"
              },
              "internationalFormat": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "number"
              }
            }
          }
        }
      },
      "VendorListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "company": {
                  "type": "string"
                },
                "contactPersonEmail": {
                  "type": "string"
                },
                "contactPersonMobile": {
                  "type": "string"
                },
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "zipcode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "nationalFormat": {
                  "type": "string"
                },
                "internationalFormat": {
                  "type": "string"
                },
                "countryCode": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "perPage": {
            "type": "string"
          },
          "searchText": {
            "type": "string"
          }
        },
        "required": [
          "companyId",
          "searchText"
        ]
      },
      "Timezone": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "offset": {
            "type": "integer"
          },
          "abbr": {
            "type": "string"
          },
          "utc": {
            "type": "string"
          },
          "id": {
            "type": "array"
          }
        }
      },
      "PmServicePackageList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "pmServices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "updatedBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "__v": {
                  "type": "integer"
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer"
          }
        }
      },
      "PmServicePackage": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "pmServices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                }
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              },
              "updatedBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              },
              "isDeleted": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Delete": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Create": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "WorkOrderCreationRequest": {
        "type": "object",
        "properties": {
          "asset": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "defects": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "mechanic": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "firstName": {
                "type": "string"
              }
            },
            "required": [
              "_id",
              "email",
              "firstName"
            ]
          },
          "sendEmailToMechanic": {
            "type": "boolean"
          },
          "serviceTasks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          }
        },
        "required": [
          "asset",
          "company",
          "createdBy",
          "defects",
          "dueDate",
          "mechanic",
          "sendEmailToMechanic",
          "serviceTasks",
          "type",
          "updatedBy"
        ]
      },
      "WorkOrderCreationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "messageId",
          "message"
        ]
      },
      "WorkOrdertList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "workOrderId": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "name"
                  ]
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "assetId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "assetId"
                  ]
                },
                "mechanic": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "firstName",
                    "lastName"
                  ]
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "taskType": {
                        "type": "integer"
                      },
                      "serviceTask": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "_id",
                          "title"
                        ]
                      },
                      "laborsTotal": {
                        "type": "number"
                      },
                      "partsTotal": {
                        "type": "number"
                      },
                      "taskTotal": {
                        "type": "number"
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "partName": {
                              "type": "string"
                            },
                            "quantity": {
                              "type": "integer"
                            },
                            "sellingPrice": {
                              "type": "number"
                            },
                            "totalAmount": {
                              "type": "number"
                            },
                            "_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "partName",
                            "quantity",
                            "sellingPrice",
                            "totalAmount",
                            "_id"
                          ]
                        }
                      },
                      "labors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "totalAmount": {
                              "type": "number"
                            },
                            "_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "description",
                            "totalAmount",
                            "_id"
                          ]
                        }
                      },
                      "_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "taskType",
                      "serviceTask",
                      "laborsTotal",
                      "partsTotal",
                      "taskTotal",
                      "parts",
                      "labors",
                      "_id"
                    ]
                  }
                },
                "dueDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "integer"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "_id",
                "workOrderId",
                "type",
                "customer",
                "asset",
                "mechanic",
                "tasks",
                "dueDate",
                "status",
                "createdAt"
              ]
            }
          },
          "totalRecords": {
            "type": "integer"
          },
          "workOrderCounts": {
            "type": "object",
            "properties": {
              "pending": {
                "type": "integer"
              },
              "completed": {
                "type": "integer"
              }
            },
            "required": [
              "pending",
              "completed"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data",
          "totalRecords",
          "workOrderCounts"
        ]
      },
      "WorkOrderResponsee": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "workOrderId": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "customer": {
                "type": "string"
              },
              "asset": {
                "type": "string"
              },
              "mechanic": {
                "type": "string"
              },
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "taskType": {
                      "type": "integer"
                    },
                    "serviceTask": {
                      "type": "string"
                    },
                    "laborsTotal": {
                      "type": "number"
                    },
                    "partsTotal": {
                      "type": "number"
                    },
                    "taskTotal": {
                      "type": "number"
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "partName": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          },
                          "sellingPrice": {
                            "type": "number"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "partName",
                          "quantity",
                          "sellingPrice",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "labors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "description",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "taskType",
                    "serviceTask",
                    "laborsTotal",
                    "partsTotal",
                    "taskTotal",
                    "parts",
                    "labors",
                    "_id"
                  ]
                }
              },
              "laborSubTotal": {
                "type": "number"
              },
              "laborTaxPercentage": {
                "type": "integer"
              },
              "laborTax": {
                "type": "integer"
              },
              "partSubTotal": {
                "type": "number"
              },
              "partsTax": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "finalTotal": {
                "type": "number"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time"
              },
              "assetDetailsAtCreation": {
                "type": "object",
                "properties": {
                  "engineHoursDisplay": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "mileageType": {
                    "type": "string"
                  }
                },
                "required": [
                  "engineHoursDisplay",
                  "mileage",
                  "mileageType"
                ]
              },
              "status": {
                "type": "integer"
              },
              "createdBy": {
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "comments": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            },
            "required": [
              "_id",
              "workOrderId",
              "type",
              "company",
              "customer",
              "asset",
              "mechanic",
              "tasks",
              "laborSubTotal",
              "laborTaxPercentage",
              "laborTax",
              "partSubTotal",
              "partsTax",
              "finalTotal",
              "dueDate",
              "assetDetailsAtCreation",
              "status",
              "createdBy",
              "updatedBy",
              "comments",
              "createdAt",
              "updatedAt",
              "__v"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "WorkOrderSearchRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          },
          "searchText": {
            "type": "string"
          },
          "searchType": {
            "type": "string",
            "description": "The type of search to be performed. Valid values include 'workOrder', 'customer', 'asset', or any other relevant search type."
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "description": "The status of the search. This can be used to filter the search results based on the status of the items being searched. For example, 0 for 'pending', 1 for 'completed', or any other relevant status code."
          }
        },
        "required": [
          "companyId",
          "endDate",
          "page",
          "perPage",
          "searchText",
          "searchType",
          "startDate",
          "status"
        ]
      },
      "WorkOrderSearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {}
          },
          "totalRecords": {
            "type": "integer"
          },
          "workOrderCounts": {
            "type": "object",
            "properties": {
              "pending": {
                "type": "integer"
              }
            },
            "required": [
              "pending"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data",
          "totalRecords",
          "workOrderCounts"
        ],
        "additionalProperties": false
      },
      "WorkOrderUpdateRequest": {
        "type": "object",
        "properties": {
          "addTask": {
            "type": "boolean"
          },
          "defects": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serviceTasks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedBy": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          }
        },
        "required": [
          "addTask",
          "defects",
          "serviceTasks",
          "updatedBy",
          "_id"
        ]
      },
      "WorkOrderUpdateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "workOrderId": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "distanceUnit": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "companyCode",
                  "currency",
                  "distanceUnit"
                ]
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "name"
                ]
              },
              "asset": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "assetId": {
                    "type": "string"
                  },
                  "licensePlate": {
                    "type": "string"
                  },
                  "unitNo": {
                    "type": "string"
                  },
                  "vin": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "make": {
                    "type": "string"
                  },
                  "modelYear": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "engineHoursDisplay": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "assetId",
                  "licensePlate",
                  "unitNo",
                  "vin",
                  "model",
                  "make",
                  "modelYear",
                  "mileage",
                  "engineHoursDisplay"
                ]
              },
              "mechanic": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "email",
                  "firstName",
                  "lastName"
                ]
              },
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "taskType": {
                      "type": "integer"
                    },
                    "serviceTask": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "serviceTaskId": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "defaultLPT": {
                          "type": "string"
                        },
                        "labor": {
                          "type": "number"
                        },
                        "parts": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "_id",
                        "serviceTaskId",
                        "title",
                        "description",
                        "defaultLPT",
                        "labor",
                        "parts",
                        "total"
                      ]
                    },
                    "laborsTotal": {
                      "type": "number"
                    },
                    "partsTotal": {
                      "type": "number"
                    },
                    "taskTotal": {
                      "type": "number"
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "partName": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          },
                          "sellingPrice": {
                            "type": "number"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "partName",
                          "quantity",
                          "sellingPrice",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "labors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "description",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "taskType",
                    "serviceTask",
                    "laborsTotal",
                    "partsTotal",
                    "taskTotal",
                    "parts",
                    "labors",
                    "_id"
                  ]
                }
              },
              "laborSubTotal": {
                "type": "number"
              },
              "laborTaxPercentage": {
                "type": "number"
              },
              "laborTax": {
                "type": "number"
              },
              "partSubTotal": {
                "type": "number"
              },
              "partsTax": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "finalTotal": {
                "type": "number"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time"
              },
              "assetDetailsAtCreation": {
                "type": "object",
                "properties": {
                  "engineHoursDisplay": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  }
                },
                "required": [
                  "engineHoursDisplay",
                  "mileage"
                ]
              },
              "status": {
                "type": "integer"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "updatedBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "comments": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            },
            "required": [
              "_id",
              "workOrderId",
              "type",
              "company",
              "customer",
              "asset",
              "mechanic",
              "tasks",
              "laborSubTotal",
              "laborTaxPercentage",
              "laborTax",
              "partSubTotal",
              "partsTax",
              "finalTotal",
              "dueDate",
              "assetDetailsAtCreation",
              "status",
              "createdBy",
              "updatedBy",
              "comments",
              "createdAt",
              "updatedAt",
              "__v"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "WorkOrderDetailResponsee": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "workOrderId": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "distanceUnit": {
                    "type": "string"
                  }
                }
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "asset": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "assetId": {
                    "type": "string"
                  },
                  "licensePlate": {
                    "type": "string"
                  },
                  "unitNo": {
                    "type": "string"
                  },
                  "vin": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "make": {
                    "type": "string"
                  },
                  "modelYear": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "mileageType": {
                    "type": "string"
                  },
                  "engineHoursDisplay": {
                    "type": "string"
                  }
                }
              },
              "mechanic": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              },
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "taskType": {
                      "type": "integer"
                    },
                    "serviceTask": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "serviceTaskId": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "defaultLPT": {
                          "type": "string"
                        },
                        "labor": {
                          "type": "number"
                        },
                        "parts": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    },
                    "laborsTotal": {
                      "type": "number"
                    },
                    "partsTotal": {
                      "type": "number"
                    },
                    "taskTotal": {
                      "type": "number"
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "partName": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          },
                          "sellingPrice": {
                            "type": "number"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "labors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              },
              "laborSubTotal": {
                "type": "number"
              },
              "laborTaxPercentage": {
                "type": "integer"
              },
              "laborTax": {
                "type": "integer"
              },
              "partSubTotal": {
                "type": "number"
              },
              "partsTax": {
                "type": "array"
              },
              "finalTotal": {
                "type": "number"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time"
              },
              "assetDetailsAtCreation": {
                "type": "object",
                "properties": {
                  "engineHoursDisplay": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "mileageType": {
                    "type": "string"
                  }
                }
              },
              "status": {
                "type": "integer"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              },
              "updatedBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              },
              "comments": {
                "type": "array"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "CompletedWorkOrderResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "data": {
            "type": "integer"
          }
        },
        "required": [
          "status",
          "messageId",
          "data"
        ]
      },
      "WorkOrderDownloadInvoiceResponsee": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "AddcommentwithDocumentWorkOrderRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "pattern": "^[0-9a-f]{24}$"
          },
          "file": {
            "type": "string",
            "format": "binary"
          },
          "isNewComment": {
            "type": "boolean"
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "comment": {
            "type": "string"
          }
        },
        "required": [
          "_id",
          "isNewComment",
          "datetime",
          "firstName",
          "lastName",
          "email",
          "comment"
        ]
      },
      "AddcommentwithDocumentWorkOrderResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "workOrderId": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "distanceUnit": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "companyCode",
                  "currency",
                  "distanceUnit"
                ]
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "name"
                ]
              },
              "asset": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "assetId": {
                    "type": "string"
                  },
                  "licensePlate": {
                    "type": "string"
                  },
                  "unitNo": {
                    "type": "string"
                  },
                  "vin": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "make": {
                    "type": "string"
                  },
                  "modelYear": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "mileageType": {
                    "type": "string"
                  },
                  "engineHoursDisplay": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "assetId",
                  "licensePlate",
                  "unitNo",
                  "vin",
                  "model",
                  "make",
                  "modelYear",
                  "mileage",
                  "mileageType",
                  "engineHoursDisplay"
                ]
              },
              "mechanic": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "email",
                  "firstName",
                  "lastName"
                ]
              },
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "taskType": {
                      "type": "integer"
                    },
                    "serviceTask": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "serviceTaskId": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "defaultLPT": {
                          "type": "string"
                        },
                        "labor": {
                          "type": "number"
                        },
                        "parts": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "_id",
                        "serviceTaskId",
                        "title",
                        "defaultLPT",
                        "labor",
                        "parts",
                        "total",
                        "description"
                      ]
                    },
                    "laborsTotal": {
                      "type": "number"
                    },
                    "partsTotal": {
                      "type": "number"
                    },
                    "taskTotal": {
                      "type": "number"
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "partName": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          },
                          "sellingPrice": {
                            "type": "number"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "partName",
                          "quantity",
                          "sellingPrice",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "labors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "description",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "taskType",
                    "serviceTask",
                    "laborsTotal",
                    "partsTotal",
                    "taskTotal",
                    "parts",
                    "labors",
                    "_id"
                  ]
                }
              },
              "laborSubTotal": {
                "type": "number"
              },
              "laborTaxPercentage": {
                "type": "integer"
              },
              "laborTax": {
                "type": "integer"
              },
              "partSubTotal": {
                "type": "number"
              },
              "partsTax": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "finalTotal": {
                "type": "number"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time"
              },
              "assetDetailsAtCreation": {
                "type": "object",
                "properties": {
                  "engineHoursDisplay": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "mileageType": {
                    "type": "string"
                  }
                },
                "required": [
                  "engineHoursDisplay",
                  "mileage",
                  "mileageType"
                ]
              },
              "status": {
                "type": "integer"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "updatedBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "comments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "datetime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        }
                      },
                      "required": [
                        "firstName",
                        "lastName",
                        "email"
                      ]
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "fileName": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "fileName",
                        "location",
                        "key"
                      ]
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "comment",
                    "datetime",
                    "user",
                    "file",
                    "_id"
                  ]
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            },
            "required": [
              "_id",
              "workOrderId",
              "type",
              "company",
              "customer",
              "asset",
              "mechanic",
              "tasks",
              "laborSubTotal",
              "laborTaxPercentage",
              "laborTax",
              "partSubTotal",
              "partsTax",
              "finalTotal",
              "dueDate",
              "assetDetailsAtCreation",
              "status",
              "createdBy",
              "updatedBy",
              "comments",
              "createdAt",
              "updatedAt",
              "__v"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "UploadInvoiceRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "file": {
            "type": "object",
            "properties": {
              "originalname": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "key": {
                "type": "string"
              }
            },
            "required": [
              "originalname",
              "location",
              "key"
            ]
          }
        },
        "required": [
          "_id",
          "file"
        ]
      },
      "UploadInvoiceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "workOrderId": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "distanceUnit": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "companyCode",
                  "currency",
                  "distanceUnit"
                ]
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "name"
                ]
              },
              "asset": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "assetId": {
                    "type": "string"
                  },
                  "licensePlate": {
                    "type": "string"
                  },
                  "unitNo": {
                    "type": "string"
                  },
                  "vin": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "make": {
                    "type": "string"
                  },
                  "modelYear": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "mileageType": {
                    "type": "string"
                  },
                  "engineHoursDisplay": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "assetId",
                  "licensePlate",
                  "unitNo",
                  "vin",
                  "model",
                  "make",
                  "modelYear",
                  "mileage",
                  "mileageType",
                  "engineHoursDisplay"
                ]
              },
              "mechanic": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "email",
                  "firstName",
                  "lastName"
                ]
              },
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "taskType": {
                      "type": "integer"
                    },
                    "serviceTask": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "serviceTaskId": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "defaultLPT": {
                          "type": "string"
                        },
                        "labor": {
                          "type": "number"
                        },
                        "parts": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "_id",
                        "serviceTaskId",
                        "title",
                        "defaultLPT",
                        "labor",
                        "parts",
                        "total",
                        "description"
                      ]
                    },
                    "laborsTotal": {
                      "type": "number"
                    },
                    "partsTotal": {
                      "type": "number"
                    },
                    "taskTotal": {
                      "type": "number"
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "partName": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          },
                          "sellingPrice": {
                            "type": "number"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "partName",
                          "quantity",
                          "sellingPrice",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "labors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "description",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "taskType",
                    "serviceTask",
                    "laborsTotal",
                    "partsTotal",
                    "taskTotal",
                    "parts",
                    "labors",
                    "_id"
                  ]
                }
              },
              "laborSubTotal": {
                "type": "number"
              },
              "laborTaxPercentage": {
                "type": "number"
              },
              "laborTax": {
                "type": "number"
              },
              "partSubTotal": {
                "type": "number"
              },
              "partsTax": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "finalTotal": {
                "type": "number"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time"
              },
              "assetDetailsAtCreation": {
                "type": "object",
                "properties": {
                  "engineHoursDisplay": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "mileageType": {
                    "type": "string"
                  }
                },
                "required": [
                  "engineHoursDisplay",
                  "mileage",
                  "mileageType"
                ]
              },
              "status": {
                "type": "integer"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "updatedBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "comments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "datetime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        }
                      },
                      "required": [
                        "firstName",
                        "lastName",
                        "email"
                      ]
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "fileName": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "fileName",
                        "location",
                        "key"
                      ]
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "comment",
                    "datetime",
                    "user",
                    "file",
                    "_id"
                  ]
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              },
              "invoice": {
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string",
                    "format": "uri"
                  },
                  "key": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "location",
                  "key"
                ]
              }
            },
            "required": [
              "_id",
              "workOrderId",
              "type",
              "company",
              "customer",
              "asset",
              "mechanic",
              "tasks",
              "laborSubTotal",
              "laborTaxPercentage",
              "laborTax",
              "partSubTotal",
              "partsTax",
              "finalTotal",
              "dueDate",
              "assetDetailsAtCreation",
              "status",
              "createdBy",
              "updatedBy",
              "comments",
              "createdAt",
              "updatedAt",
              "__v",
              "invoice"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "ExternalWorkOrderDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "workOrderId": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "distanceUnit": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "companyCode",
                  "currency",
                  "distanceUnit"
                ]
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "name"
                ]
              },
              "asset": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "assetId": {
                    "type": "string"
                  },
                  "licensePlate": {
                    "type": "string"
                  },
                  "unitNo": {
                    "type": "string"
                  },
                  "vin": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "make": {
                    "type": "string"
                  },
                  "modelYear": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "engineHoursDisplay": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "assetId",
                  "licensePlate",
                  "unitNo",
                  "vin",
                  "model",
                  "make",
                  "modelYear",
                  "mileage",
                  "engineHoursDisplay"
                ]
              },
              "mechanic": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "email",
                  "firstName",
                  "lastName"
                ]
              },
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "taskType": {
                      "type": "integer"
                    },
                    "serviceTask": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "serviceTaskId": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "defaultLPT": {
                          "type": "string"
                        },
                        "labor": {
                          "type": "number"
                        },
                        "parts": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "_id",
                        "serviceTaskId",
                        "title",
                        "defaultLPT",
                        "labor",
                        "parts",
                        "total",
                        "description"
                      ]
                    },
                    "laborsTotal": {
                      "type": "number"
                    },
                    "partsTotal": {
                      "type": "number"
                    },
                    "taskTotal": {
                      "type": "number"
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "partName": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          },
                          "sellingPrice": {
                            "type": "number"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "partName",
                          "quantity",
                          "sellingPrice",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "labors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "description",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "taskType",
                    "serviceTask",
                    "laborsTotal",
                    "partsTotal",
                    "taskTotal",
                    "parts",
                    "labors",
                    "_id"
                  ]
                }
              },
              "laborSubTotal": {
                "type": "number"
              },
              "laborTaxPercentage": {
                "type": "number"
              },
              "laborTax": {
                "type": "number"
              },
              "partSubTotal": {
                "type": "number"
              },
              "partsTax": {
                "type": "array"
              },
              "finalTotal": {
                "type": "number"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time"
              },
              "assetDetailsAtCreation": {
                "type": "object",
                "properties": {
                  "engineHoursDisplay": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  }
                },
                "required": [
                  "engineHoursDisplay",
                  "mileage"
                ]
              },
              "status": {
                "type": "integer"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "updatedBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "comments": {
                "type": "array"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              }
            },
            "required": [
              "_id",
              "workOrderId",
              "type",
              "company",
              "customer",
              "asset",
              "mechanic",
              "tasks",
              "laborSubTotal",
              "laborTaxPercentage",
              "laborTax",
              "partSubTotal",
              "partsTax",
              "finalTotal",
              "dueDate",
              "assetDetailsAtCreation",
              "status",
              "createdBy",
              "updatedBy",
              "comments",
              "createdAt",
              "updatedAt",
              "__v"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "WorkOrderExternalUpdateResponse": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "workOrderId": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "distanceUnit": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "companyCode",
                  "currency",
                  "distanceUnit"
                ]
              },
              "customer": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "name"
                ]
              },
              "asset": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "assetId": {
                    "type": "string"
                  },
                  "licensePlate": {
                    "type": "string"
                  },
                  "unitNo": {
                    "type": "string"
                  },
                  "vin": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "make": {
                    "type": "string"
                  },
                  "modelYear": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "mileageType": {
                    "type": "string"
                  },
                  "engineHoursDisplay": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "assetId",
                  "licensePlate",
                  "unitNo",
                  "vin",
                  "model",
                  "make",
                  "modelYear",
                  "mileage",
                  "mileageType",
                  "engineHoursDisplay"
                ]
              },
              "mechanic": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "email",
                  "firstName",
                  "lastName"
                ]
              },
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "taskType": {
                      "type": "integer"
                    },
                    "serviceTask": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "serviceTaskId": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "defaultLPT": {
                          "type": "string"
                        },
                        "labor": {
                          "type": "number"
                        },
                        "parts": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "_id",
                        "serviceTaskId",
                        "title",
                        "defaultLPT",
                        "labor",
                        "parts",
                        "total",
                        "description"
                      ]
                    },
                    "laborsTotal": {
                      "type": "number"
                    },
                    "partsTotal": {
                      "type": "number"
                    },
                    "taskTotal": {
                      "type": "number"
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "partName": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          },
                          "sellingPrice": {
                            "type": "number"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "partName",
                          "quantity",
                          "sellingPrice",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "labors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "totalAmount": {
                            "type": "number"
                          },
                          "_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "description",
                          "totalAmount",
                          "_id"
                        ]
                      }
                    },
                    "_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "taskType",
                    "serviceTask",
                    "laborsTotal",
                    "partsTotal",
                    "taskTotal",
                    "parts",
                    "labors",
                    "_id"
                  ]
                }
              },
              "laborSubTotal": {
                "type": "number"
              },
              "laborTaxPercentage": {
                "type": "number"
              },
              "laborTax": {
                "type": "number"
              },
              "partSubTotal": {
                "type": "number"
              },
              "partsTax": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "finalTotal": {
                "type": "number"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time"
              },
              "assetDetailsAtCreation": {
                "type": "object",
                "properties": {
                  "engineHoursDisplay": {
                    "type": "string"
                  },
                  "mileage": {
                    "type": "string"
                  },
                  "mileageType": {
                    "type": "string"
                  }
                },
                "required": [
                  "engineHoursDisplay",
                  "mileage",
                  "mileageType"
                ]
              },
              "status": {
                "type": "integer"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "updatedBy": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "_id",
                  "firstName",
                  "lastName"
                ]
              },
              "comments": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "__v": {
                "type": "integer"
              },
              "invoice": {
                "type": [
                  "object",
                  "null"
                ]
              }
            },
            "required": [
              "_id",
              "workOrderId",
              "type",
              "company",
              "customer",
              "asset",
              "mechanic",
              "tasks",
              "laborSubTotal",
              "laborTaxPercentage",
              "laborTax",
              "partSubTotal",
              "partsTax",
              "finalTotal",
              "dueDate",
              "assetDetailsAtCreation",
              "status",
              "createdBy",
              "updatedBy",
              "comments",
              "createdAt",
              "updatedAt",
              "__v",
              "invoice"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "data"
        ]
      },
      "WorkOrderExternalUpdateRequest": {
        "type": "object",
        "properties": {
          "deleteInvoice": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          }
        },
        "required": [
          "deleteInvoice",
          "type",
          "_id"
        ]
      },
      "UserLoginRequest":{
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the user."
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "The password of the user. It must be at least 8 characters long."
          }
        },
        "required": ["email", "password"]
      },
      "UserLoginResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "accessToken": {
            "type": "string",
            "description": "The access token."
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "The ID of the user."
              },
              "role": {
                "type": "string",
                "description": "The role of the user."
              },
              "company": {
                "type": "string",
                "description": "The company associated with the user."
              }
            },
            "required": ["_id", "role", "company"],
            "additionalProperties": false
          }
        },
        "required": ["status", "messageId", "message", "accessToken", "user"],
        "additionalProperties": false
      },
      "UserSignUPRequest":{
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "fleetSize": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string",
            "pattern": "^\\+[0-9]{1,15}$"
          },
          "password": {
            "type": "string",
            "minLength": 6
          }
        },
        "required": [
          "companyName",
          "country",
          "email",
          "firstName",
          "fleetSize",
          "industry",
          "lastName",
          "mobilePhone",
          "password"
        ]
      },
      "UserSignUPResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "required": ["email"]
          }
        },
        "required": ["status", "messageId", "message", "data"]
      },
      "UserEmailVerificationRequest":{
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "verificationCode": {
            "type": "integer"
          }
        },
        "required": ["email", "verificationCode"]
      },
      "UserEmailVerificationResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "company": {
                "type": "string"
              }
            },
            "required": ["_id", "role", "company"]
          }
        },
        "required": ["status", "messageId", "message", "accessToken", "user"]
      },
      "UserPhoneNumberVerificationRequest":{
        "type": "object",
        "properties": {
          "mobilePhone": {
            "type": "string"
          },
          "verificationCode": {
            "type": "integer"
          }
        },
        "required": ["mobilePhone", "verificationCode"]
      },
      "UserPhoneNumberVerificationResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "messageId": {
            "type": "integer",
            "minimum": 200
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["status", "messageId", "message"]
      },
      "GetAddressComponentsRequest":{
        "type": "object",
        "properties": {
          "address": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "default": ""
              },
              "country": {
                "type": "string"
              },
              "zipcode": {
                "type": "string",
                "default": ""
              }
            },
            "required": [
              "latitude",
              "longitude",
              "city",
              "country"
            ]
          }
        },
        "required": [
          "address"
        ]
      },
      "GetAddressComponentsResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "messageId": {
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "default": ""
              },
              "country": {
                "type": "string"
              },
              "zipcode": {
                "type": "string",
                "default": ""
              }
            },
            "required": [
              "latitude",
              "longitude",
              "city",
              "country"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "data"
        ]
      },
      "GetUserProfileResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "messageId": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "laborPerHour": {
                    "type": "number"
                  },
                  "laborTax": {
                    "type": "number"
                  },
                  "taxes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "distanceUnit": {
                    "type": "string"
                  },
                  "companyCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "currency",
                  "laborPerHour",
                  "laborTax",
                  "taxes",
                  "distanceUnit",
                  "companyCode"
                ]
              },
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "internationalFormat": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "profilePic": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "mobilePhone": {
                "type": "string"
              },
              "addressLine1": {
                "type": "string",
                "default": ""
              },
              "addressLine2": {
                "type": "string",
                "default": ""
              },
              "city": {
                "type": "string",
                "default": ""
              },
              "state": {
                "type": "string",
                "default": ""
              },
              "country": {
                "type": "string",
                "default": ""
              },
              "zipcode": {
                "type": "string",
                "default": ""
              }
            },
            "required": [
              "_id",
              "company",
              "email",
              "role",
              "firstName",
              "lastName",
              "internationalFormat",
              "createdAt",
              "profilePic",
              "timezone",
              "countryCode",
              "mobilePhone"
            ]
          }
        },
        "required": [
          "status",
          "messageId",
          "message",
          "user"
        ]
      },
      "UpdateUserProfileResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "messageId": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "laborPerHour": {
                    "type": "number"
                  },
                  "laborTax": {
                    "type": "number"
                  },
                  "taxes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "distanceUnit": {
                    "type": "string"
                  }
                },
                "required": ["name", "currency", "laborPerHour", "laborTax", "taxes", "distanceUnit"]
              },
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "internationalFormat": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "profilePic": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "mobilePhone": {
                "type": "string"
              },
              "addressLine1": {
                "type": "string",
                "default": ""
              },
              "addressLine2": {
                "type": "string",
                "default": ""
              },
              "city": {
                "type": "string",
                "default": ""
              },
              "state": {
                "type": "string",
                "default": ""
              },
              "country": {
                "type": "string",
                "default": ""
              },
              "zipcode": {
                "type": "string",
                "default": ""
              }
            },
            "required": [
              "_id",
              "company",
              "email",
              "role",
              "firstName",
              "lastName",
              "internationalFormat",
              "createdAt",
              "profilePic",
              "timezone",
              "countryCode",
              "mobilePhone"
            ]
          }
        },
        "required": ["status", "messageId", "message", "user"]
      },
      "NearByRepairShopsRequest":{
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "pattern": "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$"
          }
        },
        "required": ["location"]
      },
      "NearByRepairShopsResponse":{
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "messageId": { "type": "integer" },
          "message": { "type": "string" },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "business_status": { "type": "string" },
                "geometry": {
                  "type": "object",
                  "properties": {
                    "location": {
                      "type": "object",
                      "properties": {
                        "lat": { "type": "number" },
                        "lng": { "type": "number" }
                      },
                      "required": ["lat", "lng"]
                    },
                    "viewport": {
                      "type": "object",
                      "properties": {
                        "northeast": {
                          "type": "object",
                          "properties": {
                            "lat": { "type": "number" },
                            "lng": { "type": "number" }
                          },
                          "required": ["lat", "lng"]
                        },
                        "southwest": {
                          "type": "object",
                          "properties": {
                            "lat": { "type": "number" },
                            "lng": { "type": "number" }
                          },
                          "required": ["lat", "lng"]
                        }
                      },
                      "required": ["northeast", "southwest"]
                    }
                  },
                  "required": ["location", "viewport"]
                },
                "icon": { "type": "string" },
                "icon_background_color": { "type": "string" },
                "icon_mask_base_uri": { "type": "string" },
                "name": { "type": "string" },
                "place_id": { "type": "string" },
                "plus_code": {
                  "type": "object",
                  "properties": {
                    "compound_code": { "type": "string" },
                    "global_code": { "type": "string" }
                  },
                  "required": ["compound_code", "global_code"]
                },
                "rating": { "type": "number" },
                "reference": { "type": "string" },
                "scope": { "type": "string" },
                "types": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "user_ratings_total": { "type": "integer" },
                "vicinity": { "type": "string" }
              },
              "required": [
                "business_status",
                "geometry",
                "icon",
                "icon_background_color",
                "icon_mask_base_uri",
                "name",
                "place_id",
                "plus_code",
                "rating",
                "reference",
                "scope",
                "types",
                "user_ratings_total",
                "vicinity"
              ]
            }
          }
        },
        "required": ["status", "messageId", "message", "data"]
      },
      "RepairShopsReviewsRequest":{
        "type": "object",
        "properties": {
          "place_id": {
            "type": "string"
          }
        },
        "required": ["place_id"]
      },
      "RepairShopsReviewsResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "messageId": {
            "type": "integer",
            "const": 200
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "required": ["status", "messageId", "message", "data"]
      }
      
      
      
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}